text gText_YouDontHaveEnoughMoney {
	format("You don't have enough money.")
}

script EventScript_Shop_BreederF {
	lock
	faceplayer
	showmoneybox(0, 0, 0)
	msgbox(format("My brother and I are twins. We specialize in light training for your Pokémon.\pWould you be interested in changing a Pokémon's nature to Serious for the price of ¥50?"), MSGBOX_YESNO)
	if (var(VAR_RESULT) == NO) {
		hidemoneybox
		msgbox(Shop_Breeders_Exit)
	} else {
		checkmoney(50, 0)
		if (var(VAR_RESULT) == FALSE) {
			msgbox("You don't have enough money.")
			hidemoneybox
		} else {
			msgbox(format("Which Pokémon's nature would you like to have changed?"), MSGBOX_DEFAULT)
			special(ChoosePartyMon)
			waitstate
			faceplayer
			showmoneybox(0, 0, 0)
			if (var(VAR_0x8004) != PARTY_NOTHING_CHOSEN) {
				specialvar(VAR_RESULT, ScriptGetPartyMonSpecies)
				if (var(VAR_RESULT) == SPECIES_EGG) {
					hidemoneybox
					msgbox(format("I can't change the nature of an egg."))
				} else {
					specialvar(VAR_TEMP_1, ScriptGetPartyMonSpecies)
					bufferspeciesname(0, VAR_TEMP_1)
					copyvar(VAR_TEMP_1, VAR_0x8004)
					msgbox(format("Are you sure you want your {STR_VAR_1} to have a Serious nature?"), MSGBOX_YESNO)
					if (var(VAR_RESULT) == YES) {
						removemoney(50)
						updatemoneybox
						setvar(VAR_TEMP_2, 12)
						special(SetMonNature)
						msgbox(format("It's done."))
						hidemoneybox
					} else {
						hidemoneybox
						msgbox(Shop_Breeders_Exit)
					}
				}
			} else {
				hidemoneybox
				msgbox(Shop_Breeders_Exit)
			}
		}
	}
	release
	end
}

script EventScript_Shop_BreederM {
	lock
	faceplayer
	showmoneybox(0, 0, 0)
	msgbox(format("My sister and I are twins. We specialize in light training for your Pokémon.\pWould you be interested in swapping your Pokemon's normal ability to its other normal ability for the price of ¥50?"), MSGBOX_YESNO)
	if (var(VAR_RESULT) == NO) {
		hidemoneybox
		msgbox(Shop_Breeders_Exit)
	} else {
		checkmoney(50, 0)
		if (var(VAR_RESULT) == FALSE) {
			msgbox("You don't have enough money.")
			hidemoneybox
		} else {
			msgbox(format("Which Pokémon's ability would you like to have changed?"), MSGBOX_DEFAULT)
			special(ChoosePartyMon)
			waitstate
			faceplayer
			showmoneybox(0, 0, 0)
			if (var(VAR_0x8004) != PARTY_NOTHING_CHOSEN) {
				specialvar(VAR_RESULT, ScriptGetPartyMonSpecies)
				if (var(VAR_RESULT) == SPECIES_EGG) {
					hidemoneybox
					msgbox(format("I can't change the ability of an egg."))
				} else {
					copyvar(VAR_TEMP_1, VAR_0x8004)
					special(BufferMonAbilities)
					if (var(VAR_TEMP_2) == 2) {
						hidemoneybox
						specialvar(VAR_TEMP_4, ScriptGetPartyMonSpecies)
						bufferspeciesname(0, VAR_TEMP_4)
						msgbox(format("I can't change your {STR_VAR_1}'s ability {STR_VAR_3} because that's its hidden ability!"))
					}
					elif (var(VAR_TEMP_2) == 0) {
						if (flag(FLAG_TEMP_1) == false) {
							hidemoneybox
							specialvar(VAR_TEMP_4, ScriptGetPartyMonSpecies)
							bufferspeciesname(2, VAR_TEMP_4)
							msgbox(format("I can't change your {STR_VAR_3}'s ability {STR_VAR_1} because it doesn't have another normal ability!"))
						} else {
							specialvar(VAR_TEMP_4, ScriptGetPartyMonSpecies)
							bufferspeciesname(2, VAR_TEMP_4)
							msgbox(format("Are you sure you want to change your {STR_VAR_3}'s ability from {STR_VAR_1} to {STR_VAR_2}?"), MSGBOX_YESNO)
							if (var(VAR_RESULT) == YES) {
								copyvar(VAR_TEMP_1, VAR_0x8004)
								removemoney(50)
								updatemoneybox
								setvar(VAR_TEMP_2, 1)
								special(ChangePokemonAbility)
								msgbox(format("It's done! Enjoy your new ability!"))
								hidemoneybox
							} else {
								hidemoneybox
								msgbox(Shop_Breeders_Exit)
							}
						}
					}
					elif (var(VAR_TEMP_2) == 1) {
						specialvar(VAR_TEMP_4, ScriptGetPartyMonSpecies)
						bufferspeciesname(2, VAR_TEMP_4)
						msgbox(format("Are you sure you want to change your {STR_VAR_3}'s ability from {STR_VAR_2} to {STR_VAR_1}?"), MSGBOX_YESNO)
						if (var(VAR_RESULT) == YES) {
							copyvar(VAR_TEMP_1, VAR_0x8004)
							removemoney(50)
							updatemoneybox
							setvar(VAR_TEMP_2, 0)
							special(ChangePokemonAbility)
							msgbox(format("It's done! Enjoy your new ability!"))
							hidemoneybox
						} else {
							hidemoneybox
							msgbox(Shop_Breeders_Exit)
						}
					}
					
				}
			} else {
				hidemoneybox
				msgbox(Shop_Breeders_Exit)
			}
		}
	}
	release
	end
}

text Shop_Breeders_Exit {
	format("We'll be here if you need us.")
}

script EventScript_Shop_Alexander {
	lock
	faceplayer
	release
}

script EventScript_Shop_Gordon {
	lock
	faceplayer
	release
}

script EventScript_MandatoryCheck {
	if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_GAUNTLET) == true)) {
		specialvar(VAR_NUM_TRAINERS_REMAINING, GetNumTrainersRemaining)
		if (var(VAR_NUM_TRAINERS_REMAINING) > 0) {
			buffernumberstring(0, VAR_NUM_TRAINERS_REMAINING)
			msgbox(format("{COLOR RED}You haven't defeated all the opponents in the area yet."), MSGBOX_DEFAULT)
			switch(var(VAR_NUM_TRAINERS_REMAINING)) {
				case 1:
					msgbox(gText_OneOpponentRemaining)
				default:
					msgbox(gText_MultipleOpponentsRemaining)
			}
			release
			end
		}
	}
	return
}

script EventScript_BrutalExitNotSatisfied {
	buffernumberstring(0, VAR_NUM_TRAINERS_REMAINING)
	msgbox(format("{COLOR RED}You haven't defeated all the opponents in the area yet."))
	switch(var(VAR_NUM_TRAINERS_REMAINING)) {
		case 1:
			msgbox(gText_OneOpponentRemaining)
		default:
			msgbox(gText_MultipleOpponentsRemaining)
	}
	releaseall
}

script EventScript_Max {
	lock
	faceplayer
	if (flag(FLAG_MAX_INTRO) == false) {
		msgbox(format("{COLOR BLUE}???{COLOR DARK_GRAY}: By my calculations, you should be {PLAYER}!\pHi, {PLAYER}! My name is {COLOR BLUE}Max{COLOR DARK_GRAY}."), MSGBOX_DEFAULT)
		msgbox(format("{COLOR BLUE}Max{COLOR DARK_GRAY}: I am a traveling merchant, selling special Technical Machines for you to use!\pI travel a lot, never going to the same place again.\pI'll have different wares every time you see me, so be sure to buy whatever TMs you deem important!"), MSGBOX_DEFAULT)
		setflag(FLAG_MAX_INTRO)
	}
	message(format("{COLOR BLUE}Max{COLOR DARK_GRAY}: Hi {PLAYER}! Long time no see!\pWelcome to my TM shop!"))
	waitmessage
	switch(var(VAR_ZONE)) {
		case 2:
			pokemart(Zone2A_Shop_TMShop)
		case 6:
			pokemart(Zone6A_Shop_TMShop)
		case 10:
			pokemart(Zone10A_Shop_TMShop)
		case 18:
			pokemart(Zone18A_Shop_TMShop)
	}
	msgbox(format("{COLOR BLUE}Max{COLOR DARK_GRAY}: Goodbye!"), MSGBOX_AUTOCLOSE)
	release
}

mart Zone2A_Shop_TMShop {
	ITEM_TM_PROTECT
}

mart Zone6A_Shop_TMShop {
	ITEM_TM_TRAILBLAZE
	ITEM_TM_FLAME_CHARGE
	ITEM_TM_CHARGE_BEAM
	ITEM_TM_POWER_UP_PUNCH
}

mart Zone10A_Shop_TMShop {
	ITEM_TM_IRON_DEFENSE
	ITEM_TM_AGILITY
	ITEM_TM_AMNESIA
}

mart Zone18A_Shop_TMShop {
	ITEM_TM31
	ITEM_TM32
	ITEM_TM33
}

script EventScript_SanctuaryToZone0 {
	lockall
	applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_FaceUp)
	waitmovement(0)
	msgbox(format("Go to Zone 0?"), MSGBOX_YESNO)
	if (var(VAR_RESULT) == YES) {
		closemessage
		warpdoor(MAP_ZONE0A, 255, 17, 10)
		waitstate
	} else {
		closemessage
		applymovement(OBJ_EVENT_ID_PLAYER, Common_Movement_WalkDown)
		waitmovement(0)
	}
	releaseall
}

script EventScript_SignsQuestGirl {
	lock
	faceplayer
	questmenu(QUEST_MENU_CHECK_UNLOCKED, QUEST_SIGNS)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("Hiya! I'm improving on my reading skills!\pYou should work on your reading skills too!\pIf you read all the signs in the Pokémon Battle Labyrinth, I'll give you a nice reward!"))
		startquest(QUEST_SIGNS)
	}
	msgbox(format("Signs have lots of useful info about unique mechanics to the Pokémon Battle Labyrinth!\pYou can improve your reading skills while learning more about the challenges at hand!"))
	release
	end
}

script EventScript_SavesQuestBoy {
	lock
	faceplayer
	questmenu(QUEST_MENU_CHECK_UNLOCKED, QUEST_SAVES)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("Saving your progress is important while playing games.\pI learned that the hard way!\pDon't be like me!\pI'll give you something if you can save the game 50 times!"))
		startquest(QUEST_SAVES)
	}
	questmenu(QUEST_MENU_CHECK_COMPLETE, QUEST_SAVES)
	if (var(VAR_RESULT) == FALSE) {
		callnative(SavesQuestCheckIfDone)
		if (flag(FLAG_TEMP_6) == TRUE) {
			msgbox(format("Wow!\pYou really went and saved 50 times?\pThat's crazy.\pHere, as a reward, I can give you this nifty Trainer Notebook!"))
			if (checkitem(ITEM_TRAINER_NOTEBOOK) == FALSE) {
				giveitem(ITEM_TRAINER_NOTEBOOK)
				msgbox(format("This notebook contains all the trainers in the Pokémon Battle Labyrinth.\pIt's a nice way to keep track of your progress!"))
			} else {
				msgbox(format("Oh! You already have one.\pUh… Have some brownie points, I guess? Sorry!"))
			}
			completequest(QUEST_SAVES)
		}
	}
	msgbox(format("Don't forget to save your game!"))
	release
	end
}

script EventScript_PokedexQuestScientist {
	lock
	faceplayer
	questmenu(QUEST_MENU_CHECK_UNLOCKED, QUEST_POKEDEX)
	if (var(VAR_RESULT) == FALSE) {
		msgbox(format("Kids these days are always neglecting filling their Pokédex!\pIf you can show me a Pokédex that's seen all the Pokémon in existence, I'll reward you!"))
		startquest(QUEST_POKEDEX)
	}
	msgbox(format("Seeing all the Pokémon is tough enough.\pImagine capturing them all!"))
	release
	end
}

script EventScript_WarpZone0 {
	closemessage
	playmoncry(SPECIES_PORYGON, 0)
	waitmoncry
	clearflag(FLAG_IS_REVISITING_ZONE)
	setvar(VAR_REVISITING_ZONE, 0)
	warp(MAP_ZONE0A, 1, 255, 255)
	waitstate
	releaseall
	end
}

text gText_ItemChestIsEmpty {
	format("The item chest is empty.")
}

// script Zone_EventScript_RetirePrompt {
// 	lockall
// 	showmoneybox(0, 0, 0)
// 	msgbox(format("Would you like to retire your attempt at this Zone?\pYou will lose all your progress so far and any money you received from trainers, as well as half of your remaining money.\pAre you sure you want to return to the Sanctuary?"), MSGBOX_YESNO)
// 	if (var(VAR_RESULT) == NO) {
// 		closemessage
// 		hidemoneybox
// 		releaseall
// 		end
// 	}
// 	clearflag(FLAG_IN_NEW_ZONE)
// 	removemoney(0)
// 	updatemoneybox
// 	msgbox(format("Warping now…"))
// 	switch (var(VAR_ZONE)) {
// 		case 1:
// 			cleartrainerflag(TRAINER_PBL_NINA)
// 			cleartrainerflag(TRAINER_PBL_MARIAM)
// 			cleartrainerflag(TRAINER_PBL_OSCAR)
// 			clearflag(FLAG_BEAT_LEVIATHAN_1)
// 			setvar(VAR_ZONE_1_STATE, 0)
// 			warpteleport(MAP_ZONE_SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 2:
// 			cleartrainerflag(TRAINER_PBL_POLLY)
// 			cleartrainerflag(TRAINER_PBL_JEREMIAH)
// 			cleartrainerflag(TRAINER_PBL_HARPER)
// 			cleartrainerflag(TRAINER_PBL_ARTHUR)
// 			clearflag(FLAG_BEAT_LEVIATHAN_2)
// 			setvar(VAR_ZONE_2_STATE, 0)
// 			warpteleport(MAP_ZONE1SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 3:
// 			cleartrainerflag(TRAINER_PBL_JEMMA)
// 			cleartrainerflag(TRAINER_PBL_PATRICK)
// 			cleartrainerflag(TRAINER_PBL_BORIS)
// 			cleartrainerflag(TRAINER_PBL_ANNABELLE)
// 			cleartrainerflag(TRAINER_PBL_RICHARD)
// 			clearflag(FLAG_BEAT_LEVIATHAN_3)
// 			setvar(VAR_ZONE_3_STATE, 0)
// 			warpteleport(MAP_ZONE2SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 4:
// 			cleartrainerflag(TRAINER_PBL_HERMAN)
// 			cleartrainerflag(TRAINER_PBL_RALPH)
// 			cleartrainerflag(TRAINER_PBL_SANTIAGO)
// 			cleartrainerflag(TRAINER_PBL_CHLOE_AND_KAYA)
// 			cleartrainerflag(TRAINER_PBL_FRED)
// 			cleartrainerflag(TRAINER_PBL_LUCIA)
// 			clearflag(FLAG_BEAT_LEVIATHAN_4)
// 			setvar(VAR_ZONE_4_STATE, 0)
// 			warpteleport(MAP_ZONE3SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 5:
// 			cleartrainerflag(TRAINER_PBL_ANNE_AND_JUNE)
// 			cleartrainerflag(TRAINER_PBL_GILBERT)
// 			cleartrainerflag(TRAINER_PBL_REBECCA)
// 			cleartrainerflag(TRAINER_PBL_RYAN)
// 			cleartrainerflag(TRAINER_PBL_CAITLYN)
// 			cleartrainerflag(TRAINER_PBL_KENNETH)
// 			cleartrainerflag(TRAINER_PBL_CLINTON)
// 			clearflag(FLAG_BEAT_LEVIATHAN_5)
// 			setvar(VAR_ZONE_5_STATE, 0)
// 			warpteleport(MAP_ZONE4SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 6:
// 			cleartrainerflag(TRAINER_PBL_ZACK)
// 			cleartrainerflag(TRAINER_PBL_MELANIE)
// 			cleartrainerflag(TRAINER_PBL_CONSTANCE)
// 			cleartrainerflag(TRAINER_PBL_FRANK)
// 			cleartrainerflag(TRAINER_PBL_DUDLEY)
// 			cleartrainerflag(TRAINER_PBL_DAISY)
// 			clearflag(FLAG_BEAT_LEVIATHAN_6)
// 			setvar(VAR_ZONE_6_STATE, 0)
// 			warpteleport(MAP_ZONE5SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 7:
// 			cleartrainerflag(TRAINER_PBL_MILLIE)
// 			cleartrainerflag(TRAINER_PBL_PAIGE)
// 			cleartrainerflag(TRAINER_PBL_SETH)
// 			cleartrainerflag(TRAINER_PBL_JAMAL)
// 			cleartrainerflag(TRAINER_PBL_CONNIE)
// 			clearflag(FLAG_BEAT_LEVIATHAN_7)
// 			cleartrainerflag(TRAINER_PBL_JIMMY)
// 			cleartrainerflag(TRAINER_PBL_EMILIANO)
// 			cleartrainerflag(TRAINER_PBL_KAREN)
// 			cleartrainerflag(TRAINER_PBL_JAYDEN)
// 			cleartrainerflag(TRAINER_PBL_NEIL)
// 			cleartrainerflag(TRAINER_PBL_TAMARA)
// 			clearflag(FLAG_BEAT_LEVIATHAN_8)
// 			clearflag(FLAG_HIDE_ZONE8D_WALLY)
// 			setvar(VAR_ZONE_8_STATE, 0)
// 			warpteleport(MAP_ZONE6SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 9:
// 			cleartrainerflag(TRAINER_PBL_COOPER)
// 			cleartrainerflag(TRAINER_PBL_CARMINE)
// 			clearflag(FLAG_HIDE_ZONE9A_ARI_WINSTRATE)
// 			warpteleport(MAP_ZONE8SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 10:
// 			cleartrainerflag(TRAINER_PBL_KYLE)
// 			cleartrainerflag(TRAINER_PBL_BELLE)
// 			cleartrainerflag(TRAINER_PBL_DEWEY)
// 			cleartrainerflag(TRAINER_PBL_PEARLIE)
// 			cleartrainerflag(TRAINER_PBL_ERNEST)
// 			cleartrainerflag(TRAINER_PBL_ALANA)
// 			cleartrainerflag(TRAINER_PBL_SUSAN)
// 			cleartrainerflag(TRAINER_PBL_CONRAD)
// 			clearflag(FLAG_BEAT_LEVIATHAN_9)
// 			warpteleport(MAP_ZONE9SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 11:
// 			cleartrainerflag(TRAINER_PBL_JEANETTE)
// 			cleartrainerflag(TRAINER_PBL_EMMA_AND_LEO)
// 			cleartrainerflag(TRAINER_PBL_REGINA)
// 			cleartrainerflag(TRAINER_PBL_JOEL)
// 			clearflag(FLAG_BEAT_LEVIATHAN_10)
// 			setvar(VAR_ZONE_11_STATE, 0)
// 			warpteleport(MAP_ZONE10SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 12:
// 			cleartrainerflag(TRAINER_PBL_ESSENCE)
// 			cleartrainerflag(TRAINER_PBL_DOLORES)
// 			cleartrainerflag(TRAINER_PBL_TREVOR)
// 			cleartrainerflag(TRAINER_PBL_RANDOLPH)
// 			cleartrainerflag(TRAINER_PBL_FEDERICO)
// 			cleartrainerflag(TRAINER_PBL_GENIE)
// 			cleartrainerflag(TRAINER_PBL_HILDA)
// 			cleartrainerflag(TRAINER_PBL_KINLEY)
// 			clearflag(FLAG_HIDE_ZONE12A_CAMPER_PICNICKER)
// 			setvar(VAR_ZONE_12_STATE, 0)
// 			warpteleport(MAP_ZONE11SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 13:
// 			cleartrainerflag(TRAINER_PBL_VIOLET)
// 			cleartrainerflag(TRAINER_PBL_WANDA)
// 			cleartrainerflag(TRAINER_PBL_AMBER_AND_KIM)
// 			cleartrainerflag(TRAINER_PBL_JAN_AND_ERIN)
// 			cleartrainerflag(TRAINER_PBL_STEVE)
// 			cleartrainerflag(TRAINER_PBL_GOULD)
// 			cleartrainerflag(TRAINER_PBL_MENDEL)
// 			cleartrainerflag(TRAINER_PBL_DARWIN)
// 			cleartrainerflag(TRAINER_PBL_BART)
// 			cleartrainerflag(TRAINER_PBL_NIGEL)
// 			cleartrainerflag(TRAINER_PBL_LOLA)
// 			cleartrainerflag(TRAINER_PBL_CHARLIE)
// 			cleartrainerflag(TRAINER_PBL_TODD)
// 			cleartrainerflag(TRAINER_PBL_RUSSELL)
// 			cleartrainerflag(TRAINER_PBL_OTIS)
// 			clearflag(FLAG_BEAT_LEVIATHAN_11)
// 			clearflag(FLAG_BEAT_LEVIATHAN_12)
// 			warpteleport(MAP_ZONE12SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 15:
// 			clearflag(FLAG_BEAT_LEVIATHAN_13)
// 			setvar(VAR_ZONE_15_STATE, 0)
// 			warpteleport(MAP_ZONE14SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 16:
//         	cleartrainerflag(TRAINER_PBL_IONA)
//         	cleartrainerflag(TRAINER_PBL_BERKE)
//         	cleartrainerflag(TRAINER_PBL_TANISHA)
//         	cleartrainerflag(TRAINER_PBL_ROBERT)
//         	cleartrainerflag(TRAINER_PBL_CHRIS)
//         	cleartrainerflag(TRAINER_PBL_ANGUS)
//         	clearflag(FLAG_BEAT_LEVIATHAN_14)
// 			setvar(VAR_ZONE_16_STATE, 0)
// 			warpteleport(MAP_ZONE15SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 17:
//         	cleartrainerflag(TRAINER_PBL_AXLE)
//         	cleartrainerflag(TRAINER_PBL_RAFAEL)
//         	cleartrainerflag(TRAINER_PBL_GEORGINA)
//         	clearflag(FLAG_BEAT_LEVIATHAN_15)
// 			setvar(VAR_ZONE_17_STATE, 0)
// 			warpteleport(MAP_ZONE16SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 18:
//         	cleartrainerflag(TRAINER_PBL_DORIS)
//         	cleartrainerflag(TRAINER_PBL_HOMER)
//         	cleartrainerflag(TRAINER_PBL_JOHN)
//         	cleartrainerflag(TRAINER_PBL_GLENN)
//         	cleartrainerflag(TRAINER_PBL_JAY)
//         	cleartrainerflag(TRAINER_PBL_TYLER)
//         	cleartrainerflag(TRAINER_PBL_TERRENCE)
//         	cleartrainerflag(TRAINER_PBL_MARTY)
//         	cleartrainerflag(TRAINER_PBL_KARI)
//         	cleartrainerflag(TRAINER_PBL_ABRAHAM)
//         	cleartrainerflag(TRAINER_PBL_MELINDA)
//         	cleartrainerflag(TRAINER_PBL_EMILIO)
//         	cleartrainerflag(TRAINER_PBL_REX)
//         	cleartrainerflag(TRAINER_PBL_LOUIS)
//         	cleartrainerflag(TRAINER_PBL_LEROY)
//         	cleartrainerflag(TRAINER_PBL_ELTON)
//         	cleartrainerflag(TRAINER_PBL_WILLIE)
//         	clearflag(FLAG_BEAT_LEVIATHAN_16)
// 			setvar(VAR_ZONE_18_STATE, 0)
// 			setvar(VAR_ZONE_19_STATE, 0)
// 			clearflag(FLAG_HIDE_ZONE18A_ZOE)
// 			clearflag(FLAG_HIDE_ZONE18A_ELI)
// 			clearflag(FLAG_HIDE_ZONE18A_DOLL)
// 			warpteleport(MAP_ZONE17SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 20:
//         	cleartrainerflag(TRAINER_PBL_SHAWN)
//         	cleartrainerflag(TRAINER_PBL_FERNANDO)
//         	cleartrainerflag(TRAINER_PBL_KANE)
//         	cleartrainerflag(TRAINER_PBL_KIRK)
//         	cleartrainerflag(TRAINER_PBL_DALTON)
//         	cleartrainerflag(TRAINER_PBL_LEE)
//         	cleartrainerflag(TRAINER_PBL_BLANCHE)
//         	clearflag(FLAG_BEAT_LEVIATHAN_17)
// 			setvar(VAR_ZONE_20_STATE, 0)
// 			warpteleport(MAP_ZONE20SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 21:
// 			warpteleport(MAP_ZONE20SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 22:
// 			warpteleport(MAP_ZONE21SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 23:
// 			warpteleport(MAP_ZONE22SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 24:
// 			warpteleport(MAP_ZONE23SANCTUARY, 255, 38, 11)
// 			waitstate
// 		case 26:
// 			warpteleport(MAP_ZONE25SANCTUARY, 255, 38, 11)
// 			waitstate
// 	}
// 	releaseall
// 	end
// }

text gText_OneOpponentRemaining {
	format("{COLOR RED}There is 1 opponent remaining in this area.")
}

text gText_MultipleOpponentsRemaining {
	"{COLOR RED}There are still {STR_VAR_1} opponents\nremaining in the area."
}

script EventScript_NuzlockeVerifyBuy {
	if (flag(FLAG_SETTINGS_NUZLOCKE) == true) {
		msgbox(format("On Nuzlocke mode, you will randomly receive one of the possible Pokémon.\pIs this ok?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == NO) {
			hidemoneybox
			release
			end
		}
	}
	return
}

script EventScript_NuzlockeVerifyGift {
	if (flag(FLAG_SETTINGS_NUZLOCKE) == true) {
		msgbox(format("On Nuzlocke mode, you will randomly receive one of the possible Pokémon.\pIs this ok?"), MSGBOX_YESNO)
		if (var(VAR_RESULT) == NO) {
			release
			end
		}
	}
	return
}

script EventScript_PorygonExit {
    lock
	faceplayer
	if (var(VAR_REVISITING_ZONE) != 0) {
		goto(EventScript_WarpZone0)
	}
	call(EventScript_MandatoryCheck)
	msgbox(format("Proceed to the {COLOR GREEN}Sanctuary{COLOR DARK_GRAY}?"), MSGBOX_YESNO)
	if (var(VAR_RESULT) == YES) {
		closemessage
		playmoncry(SPECIES_PORYGON, 0)
		waitmoncry
		setvar(VAR_GENERIC, 1)
		warp(MAP_ZONE_SANCTUARY, 255, 38, 11)
		waitstate
	}
    release
    end
}

raw `
EventScript_ExitSign::
	msgbox gText_ExitSign, MSGBOX_SIGN
	end
`

script EventScript_ShakeTree {
	lockall
	msgbox("There's a sweet aroma in the air…\nWould you like to shake the tree?", MSGBOX_YESNO)
	if (var(VAR_RESULT) == NO) {
		closemessage
		releaseall
		end
	}
	msgbox(format("{PLAYER} shook the tree!"), MSGBOX_DEFAULT)
	closemessage
	setvar(VAR_0x8004, 1)
	setvar(VAR_0x8005, 1)
	setvar(VAR_0x8006, 8)
	setvar(VAR_0x8007, 5)
	special(ShakeCamera)
	playse(SE_M_BIND)
	waitstate
	waitse
	special(HeadbuttWildEncounter)
	if (var(VAR_RESULT) == TRUE) {
		waitstate
	} elif ((flag(FLAG_SETTINGS_BRUTAL) == FALSE) && (flag(FLAG_SETTINGS_RED_THUMB) == FALSE)) {
		random(70) // 30% headbutt encounter, so remaining 70%
		switch(var(VAR_RESULT)) {
			case 0:
			case 1:
			case 2:
			case 3:
			case 4:
			case 5:
			case 6:
			case 7:
			case 8:
			case 9:
			case 10:
			case 11:
			case 12:
			case 13:
			case 14:
			case 15:
			case 16:
			case 17:
			case 18:
			case 19:
				msgbox(format("A Berry fell from the tree!"))
				finditem(ITEM_ORAN_BERRY, 1)
			case 20:
			case 21:
			case 22:
				if (var(VAR_ZONE) > 2) {
					msgbox(format("A Berry fell from the tree!"))
					finditem(ITEM_CHERI_BERRY, 1)
				}
			case 23:
			case 24:
			case 25:
				if (var(VAR_ZONE) > 2) {
					msgbox(format("A Berry fell from the tree!"))
					finditem(ITEM_CHESTO_BERRY, 1)
				}
			case 26:
			case 27:
			case 28:
				if (var(VAR_ZONE) > 2) {
					msgbox(format("A Berry fell from the tree!"))
					finditem(ITEM_PECHA_BERRY, 1)
				}
			case 29:
			case 30:
			case 31:
				if (var(VAR_ZONE) > 2) {
					msgbox(format("A Berry fell from the tree!"))
					finditem(ITEM_ASPEAR_BERRY, 1)
				}
			case 32:
			case 33:
			case 34:
				if (var(VAR_ZONE) > 2) {
					msgbox(format("A Berry fell from the tree!"))
					finditem(ITEM_PERSIM_BERRY, 1)
				}
			case 35:
			case 36:
			case 37:
			case 38:
			case 39:
				if (var(VAR_ZONE) > 8) {
					msgbox(format("A Berry fell from the tree!"))
					finditem(ITEM_SITRUS_BERRY, 1)
				}
			case 40:
				if (var(VAR_ZONE) > 20) {
					msgbox(format("A Berry fell from the tree!"))
					finditem(ITEM_LUM_BERRY, 1)
				}
		}
	}
	releaseall
	end
}

script EventScript_HandleFlashlight {
	if (checkitem(ITEM_FLASHLIGHT) == TRUE) {
		setflashlevel(2)
	} else {
		setflashlevel(6)
	}
	return
}

script EventScript_RecoverySign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_1)
	msgbox("Joy's Center of Restoration\nA meeting place for everyone!", MSGBOX_SIGN)
	end
}

script EventScript_MedicineSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_2)
	msgbox("Portentia's Potions\nCurated Medicines!", MSGBOX_SIGN)
	end
}

script EventScript_PokeballSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_3)
	msgbox("Tim's Pokéball Shop\nSponsored by Pokémart Inc.", MSGBOX_SIGN)
	end
}

script EventScript_ItemsSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_4)
	msgbox("Varrick's Extravagant Emporium\nA Fine Collection!", MSGBOX_SIGN)
	end
}

script EventScript_BerriesSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_5)
	msgbox("Julia's Berries\nOnly the Berry best!", MSGBOX_SIGN)
	end
}

script EventScript_EggsSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_6)
	msgbox("Marie's Egg Delivery Service\nCome meet your next friend!", MSGBOX_SIGN)
	end
}

script EventScript_ServicesSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_7)
	msgbox("Lelouch's Services Shop\nAnything for the right price…", MSGBOX_SIGN)
	end
}

script Zone0A_EventScript_TPISign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_8)
	msgbox(format("Teleport Institute\nGetting around, easy peasy."), MSGBOX_SIGN)
	end
}

script Zone0A_EventScript_DayCareSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_9)
	msgbox(format("Pokémon Day Care\n9 Generations and counting!"), MSGBOX_SIGN)
	end
}

script Zone1A_EventScript_Sign_GoldenTree {
	completesubquest(QUEST_SIGNS, SUB_QUEST_10)
	msgbox(format("Trainer Tips\pShaking a Golden Tree might drop berries, though occasionally you'll disturb the wild Pokémon living in the tree!"), MSGBOX_SIGN)
	end
}

script Zone1A_EventScript_PorygonSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_11)
	msgbox(format("Trainer Tips\pEvery Zone has its own challenges.\nIn order to reach the Sanctuary and clear a Zone, you must find {COLOR RED}Porygon{COLOR DARK_GRAY}."), MSGBOX_DEFAULT)
	showmonpic(SPECIES_PORYGON, 10, 3)
	setseenmon(SPECIES_PORYGON)
	waitbuttonpress
	hidemonpic
	release
	end
}

script Zone1A_EventScript_Sign_RunningShoes {
	completesubquest(QUEST_SIGNS, SUB_QUEST_12)
	msgbox(format("Trainer Tips\pPress {L_BUTTON} to enable or disable Auto Run."), MSGBOX_SIGN)
	end
}

script Zone2A_EventScript_Sign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_13)
	msgbox(format("Trainer Tips\pYou may find hidden items by checking certain tiles with {A_BUTTON}.\pHowever, you won't find any hidden items on Brutal or Independent."), MSGBOX_SIGN)
	end
}

script Zone2A_EventScript_ExpShareSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_14)
	msgbox(format("Trainer Tips\pThe Exp. All only gives Pokémon who didn't participate in battle 25% experience.\pIf you want to train up a particular Pokémon, you can give them the held item Exp. Share so they get full experience!"), MSGBOX_SIGN)
	end
}

script Zone2A_EventScript_CautionSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_15)
	msgbox(format("Caution!\pDiglett have been found living inside the tunnel.\pRepels recommended!"), MSGBOX_SIGN)
	end
}

script Zone2B_EventScript_CautionSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_13)
	msgbox(format("Caution!\pDiglett have been found living inside the tunnel.\pRepels recommended!"), MSGBOX_SIGN)
	end
}

script Zone2B_EventScript_PartySelectSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_16)
	msgbox(format("Trainer Tips\pYou can switch the order of your party around in your party menu faster by pressing {SELECT_BUTTON}."), MSGBOX_SIGN)
	end
}

script Zone2B_EventScript_OptionalLeviathan {
	completesubquest(QUEST_SIGNS, SUB_QUEST_17)
	msgbox(format("Trainer Tips\pIn some Zones, Leviathans are optional to battle, but may give good rewards when defeated!"), MSGBOX_SIGN)
	end
}

script Zone3A_EventScript_Surveil {
	completesubquest(QUEST_SIGNS, SUB_QUEST_18)
	msgbox(format("Trainer Tips\pIn battle, you can use Surveil to see the opponent's team.\pIf you want to see full team information, you can turn on the Full Info setting by speaking to Colress."), MSGBOX_SIGN)
	end
}

script Zone4A_EventScript_Sign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_19)
	msgbox(format("These woods are enchanted…\nDon't get lost!"), MSGBOX_SIGN)
	end
}

script Zone4B_EventScript_Sign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_20)
	msgbox(format("Trainer Tips\pYou can see detailed information about a Pokémon species in its Pokédex entry after capturing it, such as what moves it learns or how to evolve it."), MSGBOX_SIGN)
	end
}

script Zone4C_EventScript_Sign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_21)
	msgbox(format("Trainer Tips\pStarting from now, there is a 20% chance to encounter wild Pokémon in a Double Battle."), MSGBOX_SIGN)
	end
}

script Zone4D_EventScript_Sign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_22)
	msgbox(format("Trainer Tips\pSome areas require backtracking later on in order to access them."), MSGBOX_SIGN)
	end
}

script Zone4E_EventScript_Sign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_23)
	msgbox(format("Trainer Tips\pThe Pokémon you encounter in different areas of the same zone may have slight differences!"), MSGBOX_SIGN)
	end
}

script Zone6A_EventScript_Sign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_24)
	msgbox(format("Trainer Tips\pYou can sort items in the Bag using {START_BUTTON}."), MSGBOX_SIGN)
	end
}

script Zone7A_EventScript_Sign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_25)
	msgbox(format("Trainer Tips\pYou can change the music you hear in battle by speaking to Colress!"), MSGBOX_SIGN)
	end
}

script Zone7A_EventScript_HealSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_26)
	msgbox(format("A stop for weary travelers."), MSGBOX_SIGN)
	end
}

script Zone9A_EventScript_Sign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_27)
	msgbox(format("Trainer Tips\pWhile you are on the Pokémon stats screen, you can press {A_BUTTON} to switch between stats, IVs, or EVs."), MSGBOX_SIGN)
	end
}

script Zone9A_EventScript_HerbalSign {
	completesubquest(QUEST_SIGNS, SUB_QUEST_28)
	msgbox(format("Herbal and Incense Shop"), MSGBOX_SIGN)
	end
}

script EventScript_Collector {
	lock
	faceplayer
	if (flag(FLAG_ZONE0A_SAFARI_INTRO) == false) {
		msgbox(format("Hello there!\pAre you interested in seeing Pokémon you might not be able to see elsewhere?\pCome and see my Safari Zones!\pFor beginning Safari enjoyers, one area is unlocked and accessible.\pYou can pay to unlock more areas, unlocking access to more rare Pokémon!"))
		setflag(FLAG_ZONE0A_SAFARI_INTRO)
	}
	message("Where do you want to go?")
	waitmessage
	if (var(VAR_REVISITING_ZONE) != 1) {
		dynmultipush("{COLOR GREEN}S1 - Beginner Safari", 1)
	}
	if (var(VAR_REVISITING_ZONE) != 2) {
		if (var(VAR_ZONE_0_STATE) > 1) {
			dynmultipush("{COLOR GREEN}S2 - Forest River Safari", 2)
		} elif (var(VAR_ZONE_0_STATE) == 1) {
			dynmultipush("S2 - Unlock for ¥500", 12)
		}
	}
	if (var(VAR_REVISITING_ZONE) == 0) {
		dynmultipush("Exit", 0)
	} else {
		dynmultipush("Return to Zone 0", 11)
	}
	dynmultistack(21, 0, FALSE, 6, FALSE, 0, DYN_MULTICHOICE_CB_NONE)
	switch (var(VAR_RESULT)) {
		case 0:
			msgbox(format("See you around sometime."))
		case 1:
			msgbox(format("Alright, let's go!"), MSGBOX_AUTOCLOSE)
			setvar(VAR_REVISITING_ZONE, 1)
			warp(MAP_ZONE_S1A, 255, 11, 18)
			waitstate
		case 2:
			msgbox(format("Alright, let's go!"), MSGBOX_AUTOCLOSE)
			setvar(VAR_REVISITING_ZONE, 2)
			warp(MAP_ZONE_S2A, 255, 10, 17)
			waitstate
		case 11:
			setvar(VAR_REVISITING_ZONE, 0)
			warp(MAP_ZONE0A, 255, 71, 9)
			waitstate
		case 12:
			showmoneybox(0, 0, 0)
			msgbox(format("So, you're interested in unlocking S2 for ¥500?"), MSGBOX_YESNO)
			if (var(VAR_RESULT) == YES) {
				checkmoney(500, 0)
				if (var(VAR_RESULT) == FALSE) {
					msgbox("You don't have enough money.")
				} else {
					removemoney(500)
					updatemoneybox
					playfanfare(MUS_OBTAIN_ITEM)
					msgbox(format("Alright! You unlocked {COLOR GREEN}S2 - Forest River Safari{COLOR DARK_GRAY} for ¥500!"))
					waitfanfare
					setvar(VAR_ZONE_0_STATE, 2)
				}
			}
			hidemoneybox
			msgbox(format("See you around sometime."))
	}
	release
	end
}

script EventScript_TrainerNotebook {
	if (!flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 1) {
		msgbox(format("Trainer Notebook is currently empty."))
		releaseall
		end
	}
	message(format("Trainer Notebook open."))
	waitmessage
	if (var(VAR_ZONE) > 50 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 50)) {
		dynmultipush("Zone 50", 50)
	}
	if (var(VAR_ZONE) > 49 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 49)) {
		dynmultipush("Zone 49", 49)
	}
	if (var(VAR_ZONE) > 48 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 48)) {
		dynmultipush("Zone 48", 48)
	}
	if (var(VAR_ZONE) > 47 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 47)) {
		dynmultipush("Zone 47", 47)
	}
	if (var(VAR_ZONE) > 46 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 46)) {
		dynmultipush("Zone 46", 46)
	}
	if (var(VAR_ZONE) > 45 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 45)) {
		dynmultipush("Zone 45", 45)
	}
	if (var(VAR_ZONE) > 44 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 44)) {
		dynmultipush("Zone 44", 44)
	}
	if (var(VAR_ZONE) > 43 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 43)) {
		dynmultipush("Zone 43", 43)
	}
	if (var(VAR_ZONE) > 42 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 42)) {
		dynmultipush("Zone 42", 42)
	}
	if (var(VAR_ZONE) > 41 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 41)) {
		dynmultipush("Zone 41", 41)
	}
	if (var(VAR_ZONE) > 40 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 40)) {
		dynmultipush("Zone 40", 40)
	}
	if (var(VAR_ZONE) > 39 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 39)) {
		dynmultipush("Zone 39", 39)
	}
	if (var(VAR_ZONE) > 38 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 38)) {
		dynmultipush("Zone 38", 38)
	}
	if (var(VAR_ZONE) > 37 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 37)) {
		dynmultipush("Zone 37", 37)
	}
	if (var(VAR_ZONE) > 36 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 36)) {
		dynmultipush("Zone 36", 36)
	}
	if (var(VAR_ZONE) > 35 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 35)) {
		dynmultipush("Zone 35", 35)
	}
	if (var(VAR_ZONE) > 34 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 34)) {
		dynmultipush("Zone 34", 34)
	}
	if (var(VAR_ZONE) > 33 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 33)) {
		dynmultipush("Zone 33", 33)
	}
	if (var(VAR_ZONE) > 32 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 32)) {
		dynmultipush("Zone 32", 32)
	}
	if (var(VAR_ZONE) > 31 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 31)) {
		dynmultipush("Zone 31", 31)
	}
	if (var(VAR_ZONE) > 30 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 30)) {
		dynmultipush("Zone 30", 30)
	}
	if (var(VAR_ZONE) > 29 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 29)) {
		dynmultipush("Zone 29", 29)
	}
	if (var(VAR_ZONE) > 28 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 28)) {
		dynmultipush("Zone 28", 28)
	}
	if (var(VAR_ZONE) > 27 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 27)) {
		dynmultipush("Zone 27", 27)
	}
	if (var(VAR_ZONE) > 26 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 26)) {
		dynmultipush("Zone 26", 26)
	}
	if (var(VAR_ZONE) > 24 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 24)) {
		dynmultipush("Zone 24 & 25", 24)
	}
	if (var(VAR_ZONE) > 23 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 23)) {
		dynmultipush("Zone 23", 23)
	}
	if (var(VAR_ZONE) > 22 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 22)) {
		dynmultipush("Zone 22", 22)
	}
	if (var(VAR_ZONE) > 21 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 21)) {
		dynmultipush("Zone 21", 21)
	}
	if (var(VAR_ZONE) > 20 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 20)) {
		dynmultipush("Zone 20", 20)
	}
	if (var(VAR_ZONE) > 18 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 18)) {
		dynmultipush("Zone 18 & 19", 18)
	}
	if (var(VAR_ZONE) > 17 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 17)) {
		dynmultipush("Zone 17", 17)
	}
	if (var(VAR_ZONE) > 16 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 16)) {
		dynmultipush("Zone 16", 16)
	}
	if (var(VAR_ZONE) > 15 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 15)) {
		dynmultipush("Zone 15", 15)
	}
	if (var(VAR_ZONE) > 13 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 13)) {
		dynmultipush("Zone 13 & 14", 13)
	}
	if (var(VAR_ZONE) > 12 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 12)) {
		dynmultipush("Zone 12", 12)
	}
	if (var(VAR_ZONE) > 11 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 11)) {
		dynmultipush("Zone 11", 11)
	}
	if (var(VAR_ZONE) > 10 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 10)) {
		dynmultipush("Zone 10", 10)
	}
	if (var(VAR_ZONE) > 9 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 9)) {
		dynmultipush("Zone 9", 9)
	}
	if (var(VAR_ZONE) > 7 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 7)) {
		dynmultipush("Zone 7 & 8", 7)
	}
	if (var(VAR_ZONE) > 6 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 6)) {
		dynmultipush("Zone 6", 6)
	}
	if (var(VAR_ZONE) > 5 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 5)) {
		dynmultipush("Zone 5", 5)
	}
	if (var(VAR_ZONE) > 4 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 4)) {
		dynmultipush("Zone 4", 4)
	}
	if (var(VAR_ZONE) > 3 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 3)) {
		dynmultipush("Zone 3", 3)
	}
	if (var(VAR_ZONE) > 2 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 2)) {
		dynmultipush("Zone 2", 2)
	}
	if (var(VAR_ZONE) > 1 || (flag(FLAG_IN_NEW_ZONE) && var(VAR_ZONE) == 1)) {
		dynmultipush("Zone 1", 1)
	}
	dynmultipush("Close Notebook", 51)
	dynmultistack(0, 0, FALSE, 6, FALSE, 0, DYN_MULTICHOICE_CB_NONE)
	switch (var(VAR_RESULT)) {
		case 1:
			message(format("Trainer Notebook open to\n{COLOR GREEN}Zone 1 - Leafway Trail{COLOR DARK_GRAY}."))
			waitmessage
			buffertrainerclassname(1, TRAINER_PBL_NINA)
			buffertrainername(2, TRAINER_PBL_NINA)
			if (!defeated(TRAINER_PBL_NINA)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_SCHOOL_KID_F)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_SCHOOL_KID_F)
			}
			buffertrainerclassname(1, TRAINER_PBL_MARIAM)
			buffertrainername(2, TRAINER_PBL_MARIAM)
			if (!defeated(TRAINER_PBL_MARIAM)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			}
			buffertrainerclassname(1, TRAINER_PBL_OSCAR)
			buffertrainername(2, TRAINER_PBL_OSCAR)
			if (!defeated(TRAINER_PBL_OSCAR)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_YOUNGSTER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_YOUNGSTER)
			}
			buffertrainername(2, TRAINER_PBL_COREY_LEVIATHAN_1_GRASS_STARTER)
			if (!defeated(TRAINER_PBL_COREY_LEVIATHAN_1_GRASS_STARTER)) {
				dynmultipush("{COLOR RED}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_SCHOOL_KID_M)
			} else {
				dynmultipush("{COLOR GREEN}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_SCHOOL_KID_M)
			}
			dynmultistack(0, 0, FALSE, 6, FALSE, 0, DYN_MULTICHOICE_CB_SHOW_OBJECT)
			switch (var(VAR_RESULT)) {
				case OBJ_EVENT_GFX_SCHOOL_KID_F:
					setvar(VAR_TEMP_2, TRAINER_PBL_NINA)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_NINA)
					buffertrainername(2, TRAINER_PBL_NINA)
					if (!defeated(TRAINER_PBL_NINA)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3}is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_LASS:
					setvar(VAR_TEMP_2, TRAINER_PBL_MARIAM)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_MARIAM)
					buffertrainername(2, TRAINER_PBL_MARIAM)
					if (!defeated(TRAINER_PBL_MARIAM)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3}is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_YOUNGSTER:
					setvar(VAR_TEMP_2, TRAINER_PBL_OSCAR)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_OSCAR)
					buffertrainername(2, TRAINER_PBL_OSCAR)
					if (!defeated(TRAINER_PBL_OSCAR)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3}is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_SCHOOL_KID_M:
					if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_CHALLENGE) == true)) {
						switch (var(VAR_STARTER_MON)) {
							case 0:
								setvar(VAR_TEMP_2, TRAINER_PBL_COREY_LEVIATHAN_1_GRASS_STARTER_CHALLENGE)
							case 1:
								setvar(VAR_TEMP_2, TRAINER_PBL_COREY_LEVIATHAN_1_FIRE_STARTER_CHALLENGE)
							case 2:
								setvar(VAR_TEMP_2, TRAINER_PBL_COREY_LEVIATHAN_1_WATER_STARTER_CHALLENGE)
						}
					} else {
						switch (var(VAR_STARTER_MON)) {
							case 0:
								setvar(VAR_TEMP_2, TRAINER_PBL_COREY_LEVIATHAN_1_GRASS_STARTER)
							case 1:
								setvar(VAR_TEMP_2, TRAINER_PBL_COREY_LEVIATHAN_1_FIRE_STARTER)
							case 2:
								setvar(VAR_TEMP_2, TRAINER_PBL_COREY_LEVIATHAN_1_WATER_STARTER)
						}
					}
					special(BufferTrainerPartyPokemon)
					buffertrainername(2, TRAINER_PBL_COREY_LEVIATHAN_1_GRASS_STARTER)
					if (!flag(FLAG_BEAT_LEVIATHAN_1)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("Leviathan {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("Leviathan {STR_VAR_3}is ready to\nbattle!")
						}
					} else {
						msgbox("Leviathan {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
			}
		case 2:
			message(format("Trainer Notebook open to\n{COLOR GREEN}Zone 2 - Warren Woods{COLOR DARK_GRAY}."))
			waitmessage
			buffertrainerclassname(1, TRAINER_PBL_POLLY)
			buffertrainername(2, TRAINER_PBL_POLLY)
			if (!defeated(TRAINER_PBL_POLLY)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_SCHOOL_KID_F)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_SCHOOL_KID_F)
			}
			buffertrainerclassname(1, TRAINER_PBL_JEREMIAH)
			buffertrainername(2, TRAINER_PBL_JEREMIAH)
			if (!defeated(TRAINER_PBL_JEREMIAH)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BUG_CATCHER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BUG_CATCHER)
			}
			buffertrainerclassname(1, TRAINER_PBL_JOSH)
			buffertrainername(2, TRAINER_PBL_JOSH)
			if (!defeated(TRAINER_PBL_JOSH)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BUG_CATCHER + 400)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BUG_CATCHER + 400)
			}
			buffertrainerclassname(1, TRAINER_PBL_HARPER)
			buffertrainername(2, TRAINER_PBL_HARPER)
			if (!defeated(TRAINER_PBL_HARPER)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			}
			buffertrainerclassname(1, TRAINER_PBL_ARTHUR)
			buffertrainername(2, TRAINER_PBL_ARTHUR)
			if (!defeated(TRAINER_PBL_ARTHUR)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_SCHOOL_KID_M)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_SCHOOL_KID_M)
			}
			buffertrainername(2, TRAINER_PBL_SHAUN_LEVIATHAN_2)
			if (!flag(FLAG_BEAT_LEVIATHAN_2)) {
				dynmultipush("{COLOR RED}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_YOUNGSTER)
			} else {
				dynmultipush("{COLOR GREEN}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_YOUNGSTER)
			}
			dynmultistack(0, 0, FALSE, 6, FALSE, 0, DYN_MULTICHOICE_CB_SHOW_OBJECT)
			switch (var(VAR_RESULT)) {
				case OBJ_EVENT_GFX_SCHOOL_KID_F:
					setvar(VAR_TEMP_2, TRAINER_PBL_POLLY)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_POLLY)
					buffertrainername(2, TRAINER_PBL_POLLY)
					if (!defeated(TRAINER_PBL_POLLY)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3}is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_BUG_CATCHER:
					setvar(VAR_TEMP_2, TRAINER_PBL_JEREMIAH)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_JEREMIAH)
					buffertrainername(2, TRAINER_PBL_JEREMIAH)
					if (!defeated(TRAINER_PBL_JEREMIAH)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3}is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_BUG_CATCHER + 400:
					setvar(VAR_TEMP_2, TRAINER_PBL_JOSH)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_JOSH)
					buffertrainername(2, TRAINER_PBL_JOSH)
					if (!defeated(TRAINER_PBL_JOSH)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3}is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_LASS:
					setvar(VAR_TEMP_2, TRAINER_PBL_HARPER)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_HARPER)
					buffertrainername(2, TRAINER_PBL_HARPER)
					if (!defeated(TRAINER_PBL_HARPER)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3}is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_SCHOOL_KID_M:
					setvar(VAR_TEMP_2, TRAINER_PBL_ARTHUR)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_ARTHUR)
					buffertrainername(2, TRAINER_PBL_ARTHUR)
					if (!defeated(TRAINER_PBL_ARTHUR)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3}is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_YOUNGSTER:
					if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_CHALLENGE) == true)) {
						setvar(VAR_TEMP_2, TRAINER_PBL_SHAUN_LEVIATHAN_2_CHALLENGE)
					} else {
						setvar(VAR_TEMP_2, TRAINER_PBL_SHAUN_LEVIATHAN_2)
					}
					special(BufferTrainerPartyPokemon)
					buffertrainername(2, TRAINER_PBL_SHAUN_LEVIATHAN_2)
					if (!flag(FLAG_BEAT_LEVIATHAN_2)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("Leviathan {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("Leviathan {STR_VAR_3}is ready to\nbattle!")
						}
					} else {
						msgbox("Leviathan {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
			}
		case 3:
			message(format("Trainer Notebook open to\n{COLOR GREEN}Zone 3 - Sunlit Pond{COLOR DARK_GRAY}."))
			waitmessage
			buffertrainerclassname(1, TRAINER_PBL_JEMMA)
			buffertrainername(2, TRAINER_PBL_JEMMA)
			if (!defeated(TRAINER_PBL_JEMMA)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			}
			buffertrainerclassname(1, TRAINER_PBL_PATRICK)
			buffertrainername(2, TRAINER_PBL_PATRICK)
			if (!defeated(TRAINER_PBL_PATRICK)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BUG_CATCHER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BUG_CATCHER)
			}
			buffertrainerclassname(1, TRAINER_PBL_ANNABELLE)
			buffertrainername(2, TRAINER_PBL_ANNABELLE)
			if (!defeated(TRAINER_PBL_ANNABELLE)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LADY)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LADY)
			}
			buffertrainerclassname(1, TRAINER_PBL_BORIS)
			buffertrainername(2, TRAINER_PBL_BORIS)
			if (!defeated(TRAINER_PBL_BORIS)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_YOUNGSTER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_YOUNGSTER)
			}
			buffertrainerclassname(1, TRAINER_PBL_RICHARD)
			buffertrainername(2, TRAINER_PBL_RICHARD)
			if (!defeated(TRAINER_PBL_RICHARD)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_RICH_BOY)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_RICH_BOY)
			}
			buffertrainername(2, TRAINER_PBL_PHILLIPA_LEVIATHAN_3)
			if (!flag(FLAG_BEAT_LEVIATHAN_3)) {
				dynmultipush("{COLOR RED}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_SCHOOL_KID_F)
			} else {
				dynmultipush("{COLOR GREEN}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_SCHOOL_KID_F)
			}
			dynmultistack(0, 0, FALSE, 6, FALSE, 0, DYN_MULTICHOICE_CB_SHOW_OBJECT)
			switch (var(VAR_RESULT)) {
				case OBJ_EVENT_GFX_LASS:
					setvar(VAR_TEMP_2, TRAINER_PBL_JEMMA)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_JEMMA)
					buffertrainername(2, TRAINER_PBL_JEMMA)
					if (!defeated(TRAINER_PBL_JEMMA)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3}is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
									case OBJ_EVENT_GFX_BUG_CATCHER:
					setvar(VAR_TEMP_2, TRAINER_PBL_PATRICK)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_PATRICK)
					buffertrainername(2, TRAINER_PBL_PATRICK)
					if (!defeated(TRAINER_PBL_PATRICK)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_LADY:
					setvar(VAR_TEMP_2, TRAINER_PBL_ANNABELLE)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_ANNABELLE)
					buffertrainername(2, TRAINER_PBL_ANNABELLE)
					if (!defeated(TRAINER_PBL_ANNABELLE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_YOUNGSTER:
					setvar(VAR_TEMP_2, TRAINER_PBL_BORIS)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_BORIS)
					buffertrainername(2, TRAINER_PBL_BORIS)
					if (!defeated(TRAINER_PBL_BORIS)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_RICH_BOY:
					setvar(VAR_TEMP_2, TRAINER_PBL_RICHARD)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_RICHARD)
					buffertrainername(2, TRAINER_PBL_RICHARD)
					if (!defeated(TRAINER_PBL_RICHARD)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_SCHOOL_KID_F:
					if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_CHALLENGE) == true)) {
						setvar(VAR_TEMP_2, TRAINER_PBL_PHILLIPA_LEVIATHAN_3_CHALLENGE)
					} else {
						setvar(VAR_TEMP_2, TRAINER_PBL_PHILLIPA_LEVIATHAN_3)
					}
					special(BufferTrainerPartyPokemon)
					buffertrainername(2, TRAINER_PBL_PHILLIPA_LEVIATHAN_3)
					if (!flag(FLAG_BEAT_LEVIATHAN_3)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("Leviathan {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("Leviathan {STR_VAR_3}is ready to\nbattle!")
						}
					} else {
						msgbox("Leviathan {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
			}
		case 4:
			message(format("Trainer Notebook open to\n{COLOR GREEN}Zone 4 - Mystic Glade{COLOR DARK_GRAY}."))
			waitmessage
			buffertrainerclassname(1, TRAINER_PBL_HERMAN)
			buffertrainername(2, TRAINER_PBL_HERMAN)
			if (!defeated(TRAINER_PBL_HERMAN)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_SCHOOL_KID_M)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_SCHOOL_KID_M)
			}
			buffertrainerclassname(1, TRAINER_PBL_RALPH)
			buffertrainername(2, TRAINER_PBL_RALPH)
			if (!defeated(TRAINER_PBL_RALPH)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_YOUNGSTER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_YOUNGSTER)
			}
			buffertrainerclassname(1, TRAINER_PBL_CALLIE)
			buffertrainername(2, TRAINER_PBL_CALLIE)
			if (!defeated(TRAINER_PBL_CALLIE)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			}
			buffertrainerclassname(1, TRAINER_PBL_SANTIAGO)
			buffertrainername(2, TRAINER_PBL_SANTIAGO)
			if (!defeated(TRAINER_PBL_SANTIAGO)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BUG_CATCHER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BUG_CATCHER)
			}
			buffertrainerclassname(1, TRAINER_PBL_CHLOE_AND_KAYA)
			buffertrainername(2, TRAINER_PBL_CHLOE_AND_KAYA)
			if (!defeated(TRAINER_PBL_CHLOE_AND_KAYA)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_TWIN)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_TWIN)
			}
			buffertrainerclassname(1, TRAINER_PBL_FRED)
			buffertrainername(2, TRAINER_PBL_FRED)
			if (!defeated(TRAINER_PBL_FRED)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_CAMPER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_CAMPER)
			}
			buffertrainerclassname(1, TRAINER_PBL_LUCIA)
			buffertrainername(2, TRAINER_PBL_LUCIA)
			if (!defeated(TRAINER_PBL_LUCIA)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_FAIRY_TALE_GIRL)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_FAIRY_TALE_GIRL)
			}
			buffertrainername(2, TRAINER_PBL_ELLA_AND_BELLA_LEVIATHAN_4)
			if (!flag(FLAG_BEAT_LEVIATHAN_3)) {
				dynmultipush("{COLOR RED}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_LASS + 400)
			} else {
				dynmultipush("{COLOR GREEN}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_LASS + 400)
			}
			dynmultistack(0, 0, FALSE, 6, FALSE, 0, DYN_MULTICHOICE_CB_SHOW_OBJECT)
			switch (var(VAR_RESULT)) {
				case OBJ_EVENT_GFX_SCHOOL_KID_M:
					setvar(VAR_TEMP_2, TRAINER_PBL_HERMAN)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_HERMAN)
					buffertrainername(2, TRAINER_PBL_HERMAN)
					if (!defeated(TRAINER_PBL_HERMAN)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_YOUNGSTER:
					setvar(VAR_TEMP_2, TRAINER_PBL_RALPH)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_RALPH)
					buffertrainername(2, TRAINER_PBL_RALPH)
					if (!defeated(TRAINER_PBL_RALPH)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_LASS:
					setvar(VAR_TEMP_2, TRAINER_PBL_CALLIE)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_CALLIE)
					buffertrainername(2, TRAINER_PBL_CALLIE)
					if (!defeated(TRAINER_PBL_CALLIE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_BUG_CATCHER:
					setvar(VAR_TEMP_2, TRAINER_PBL_SANTIAGO)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_SANTIAGO)
					buffertrainername(2, TRAINER_PBL_SANTIAGO)
					if (!defeated(TRAINER_PBL_SANTIAGO)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_TWIN:
					setvar(VAR_TEMP_2, TRAINER_PBL_CHLOE_AND_KAYA)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_CHLOE_AND_KAYA)
					buffertrainername(2, TRAINER_PBL_CHLOE_AND_KAYA)
					if (!defeated(TRAINER_PBL_CHLOE_AND_KAYA)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} are ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} are ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} are defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_CAMPER:
					setvar(VAR_TEMP_2, TRAINER_PBL_FRED)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_FRED)
					buffertrainername(2, TRAINER_PBL_FRED)
					if (!defeated(TRAINER_PBL_FRED)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_FAIRY_TALE_GIRL:
					setvar(VAR_TEMP_2, TRAINER_PBL_LUCIA)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_LUCIA)
					buffertrainername(2, TRAINER_PBL_LUCIA)
					if (!defeated(TRAINER_PBL_LUCIA)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_LASS + 400:
					if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_CHALLENGE) == true)) {
						setvar(VAR_TEMP_2, TRAINER_PBL_ELLA_AND_BELLA_LEVIATHAN_4_CHALLENGE)
					} else {
						setvar(VAR_TEMP_2, TRAINER_PBL_ELLA_AND_BELLA_LEVIATHAN_4)
					}
					special(BufferTrainerPartyPokemon)
					buffertrainername(2, TRAINER_PBL_ELLA_AND_BELLA_LEVIATHAN_4)
					if (!flag(FLAG_BEAT_LEVIATHAN_4)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("Leviathan {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("Leviathan {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("Leviathan {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
			}
		case 5:
			message(format("Trainer Notebook open to\n{COLOR GREEN}Zone 5 - Timberstep Plateau{COLOR DARK_GRAY}."))
			waitmessage
			buffertrainerclassname(1, TRAINER_PBL_ANNE_AND_JUNE)
			buffertrainername(2, TRAINER_PBL_ANNE_AND_JUNE)
			if (!defeated(TRAINER_PBL_ANNE_AND_JUNE)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			}
			buffertrainerclassname(1, TRAINER_PBL_NOVA_AND_CORA)
			buffertrainername(2, TRAINER_PBL_NOVA_AND_CORA)
			if (!defeated(TRAINER_PBL_NOVA_AND_CORA)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_TWIN)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_TWIN)
			}
			buffertrainerclassname(1, TRAINER_PBL_CLINTON)
			buffertrainername(2, TRAINER_PBL_CLINTON)
			if (!defeated(TRAINER_PBL_CLINTON)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_RICH_BOY)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_RICH_BOY)
			}
			buffertrainerclassname(1, TRAINER_PBL_REBECCA)
			buffertrainername(2, TRAINER_PBL_REBECCA)
			if (!defeated(TRAINER_PBL_REBECCA)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_POKEFAN_F)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_POKEFAN_F)
			}
			buffertrainerclassname(1, TRAINER_PBL_RYAN)
			buffertrainername(2, TRAINER_PBL_RYAN)
			if (!defeated(TRAINER_PBL_RYAN)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_POKEFAN_M)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_POKEFAN_M)
			}
			buffertrainerclassname(1, TRAINER_PBL_CAITLYN)
			buffertrainername(2, TRAINER_PBL_CAITLYN)
			if (!defeated(TRAINER_PBL_CAITLYN)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_PICNICKER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_PICNICKER)
			}
			buffertrainerclassname(1, TRAINER_PBL_KENNETH)
			buffertrainername(2, TRAINER_PBL_KENNETH)
			if (!defeated(TRAINER_PBL_KENNETH)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_CAMPER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_CAMPER)
			}
			buffertrainerclassname(1, TRAINER_PBL_KEVIN)
			buffertrainername(2, TRAINER_PBL_KEVIN)
			if (!defeated(TRAINER_PBL_KEVIN)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BUG_CATCHER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BUG_CATCHER)
			}
			buffertrainername(2, TRAINER_PBL_MARIA_LEVIATHAN_5)
			if (!flag(FLAG_BEAT_LEVIATHAN_5)) {
				dynmultipush("{COLOR RED}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_BACKPACKER_F)
			} else {
				dynmultipush("{COLOR GREEN}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_BACKPACKER_F)
			}
			dynmultistack(0, 0, FALSE, 6, FALSE, 0, DYN_MULTICHOICE_CB_SHOW_OBJECT)
			switch (var(VAR_RESULT)) {
				case OBJ_EVENT_GFX_LASS:
					setvar(VAR_TEMP_2, TRAINER_PBL_ANNE_AND_JUNE)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_ANNE_AND_JUNE)
					buffertrainername(2, TRAINER_PBL_ANNE_AND_JUNE)
					if (!defeated(TRAINER_PBL_ANNE_AND_JUNE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} are ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} are ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} are defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_TWIN:
					setvar(VAR_TEMP_2, TRAINER_PBL_NOVA_AND_CORA)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_NOVA_AND_CORA)
					buffertrainername(2, TRAINER_PBL_NOVA_AND_CORA)
					if (!defeated(TRAINER_PBL_NOVA_AND_CORA)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} are ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} are ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} are defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_RICH_BOY:
					setvar(VAR_TEMP_2, TRAINER_PBL_CLINTON)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_CLINTON)
					buffertrainername(2, TRAINER_PBL_CLINTON)
					if (!defeated(TRAINER_PBL_CLINTON)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_POKEFAN_F:
					setvar(VAR_TEMP_2, TRAINER_PBL_REBECCA)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_REBECCA)
					buffertrainername(2, TRAINER_PBL_REBECCA)
					if (!defeated(TRAINER_PBL_REBECCA)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_POKEFAN_M:
					setvar(VAR_TEMP_2, TRAINER_PBL_RYAN)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_RYAN)
					buffertrainername(2, TRAINER_PBL_RYAN)
					if (!defeated(TRAINER_PBL_RYAN)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_PICNICKER:
					setvar(VAR_TEMP_2, TRAINER_PBL_CAITLYN)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_CAITLYN)
					buffertrainername(2, TRAINER_PBL_CAITLYN)
					if (!defeated(TRAINER_PBL_CAITLYN)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_CAMPER:
					setvar(VAR_TEMP_2, TRAINER_PBL_KENNETH)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_KENNETH)
					buffertrainername(2, TRAINER_PBL_KENNETH)
					if (!defeated(TRAINER_PBL_KENNETH)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_BUG_CATCHER:
					setvar(VAR_TEMP_2, TRAINER_PBL_KEVIN)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_KEVIN)
					buffertrainername(2, TRAINER_PBL_KEVIN)
					if (!defeated(TRAINER_PBL_KEVIN)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
				case OBJ_EVENT_GFX_BACKPACKER_F:
					if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_CHALLENGE) == true)) {
						setvar(VAR_TEMP_2, TRAINER_PBL_MARIA_LEVIATHAN_5_CHALLENGE)
					} else {
						setvar(VAR_TEMP_2, TRAINER_PBL_MARIA_LEVIATHAN_5)
					}
					special(BufferTrainerPartyPokemon)
					buffertrainername(2, TRAINER_PBL_MARIA_LEVIATHAN_5)
					if (!flag(FLAG_BEAT_LEVIATHAN_5)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("Leviathan {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("Leviathan {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("Leviathan {STR_VAR_3} is defeated!\nThey battled with:\l{STR_VAR_1}.")
					}
			}
		case 6:
			message(format("Trainer Notebook open to\n{COLOR GREEN}Zone 6 - Seabreeze Island{COLOR DARK_GRAY}."))
			waitmessage
			buffertrainerclassname(1, TRAINER_PBL_GILBERT)
			buffertrainername(2, TRAINER_PBL_GILBERT)
			if (!defeated(TRAINER_PBL_GILBERT)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_FISHERMAN)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_FISHERMAN)
			}
			buffertrainerclassname(1, TRAINER_PBL_MELANIE)
			buffertrainername(2, TRAINER_PBL_MELANIE)
			if (!defeated(TRAINER_PBL_MELANIE)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			}
			buffertrainerclassname(1, TRAINER_PBL_CONSTANCE)
			buffertrainername(2, TRAINER_PBL_CONSTANCE)
			if (!defeated(TRAINER_PBL_CONSTANCE)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LADY)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LADY)
			}
			buffertrainerclassname(1, TRAINER_PBL_FRANK)
			buffertrainername(2, TRAINER_PBL_FRANK)
			if (!defeated(TRAINER_PBL_FRANK)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_YOUNGSTER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_YOUNGSTER)
			}
			buffertrainerclassname(1, TRAINER_PBL_DUDLEY)
			buffertrainername(2, TRAINER_PBL_DUDLEY)
			if (!defeated(TRAINER_PBL_DUDLEY)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BIRD_KEEPER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BIRD_KEEPER)
			}
			buffertrainerclassname(1, TRAINER_PBL_DAISY)
			buffertrainername(2, TRAINER_PBL_DAISY)
			if (!defeated(TRAINER_PBL_DAISY)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BREEDER_F)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BREEDER_F)
			}
			buffertrainerclassname(1, TRAINER_PBL_VIC_AND_DELL)
			buffertrainername(2, TRAINER_PBL_VIC_AND_DELL)
			if (!defeated(TRAINER_PBL_VIC_AND_DELL)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_TWIN)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_TWIN)
			}
			buffertrainerclassname(1, TRAINER_PBL_MINA)
			buffertrainername(2, TRAINER_PBL_MINA)
			if (!defeated(TRAINER_PBL_MINA)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_TUBER_F)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_TUBER_F)
			}
			buffertrainername(2, TRAINER_PBL_ZACK_AND_COBY_LEVIATHAN_6)
			if (!flag(FLAG_BEAT_LEVIATHAN_6)) {
				dynmultipush("{COLOR RED}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_SWIMMER_F_WALKING)
			} else {
				dynmultipush("{COLOR GREEN}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_SWIMMER_F_WALKING)
			}
			dynmultistack(0, 0, FALSE, 6, FALSE, 0, DYN_MULTICHOICE_CB_SHOW_OBJECT)
			switch (var(VAR_RESULT)) {
				case OBJ_EVENT_GFX_FISHERMAN:
					setvar(VAR_TEMP_2, TRAINER_PBL_GILBERT)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_GILBERT)
					buffertrainername(2, TRAINER_PBL_GILBERT)
					if (!defeated(TRAINER_PBL_GILBERT)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_LASS:
					setvar(VAR_TEMP_2, TRAINER_PBL_MELANIE)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_MELANIE)
					buffertrainername(2, TRAINER_PBL_MELANIE)
					if (!defeated(TRAINER_PBL_MELANIE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_LADY:
					setvar(VAR_TEMP_2, TRAINER_PBL_CONSTANCE)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_CONSTANCE)
					buffertrainername(2, TRAINER_PBL_CONSTANCE)
					if (!defeated(TRAINER_PBL_CONSTANCE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_YOUNGSTER:
					setvar(VAR_TEMP_2, TRAINER_PBL_FRANK)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_FRANK)
					buffertrainername(2, TRAINER_PBL_FRANK)
					if (!defeated(TRAINER_PBL_FRANK)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_BIRD_KEEPER:
					setvar(VAR_TEMP_2, TRAINER_PBL_DUDLEY)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_DUDLEY)
					buffertrainername(2, TRAINER_PBL_DUDLEY)
					if (!defeated(TRAINER_PBL_DUDLEY)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_BREEDER_F:
					setvar(VAR_TEMP_2, TRAINER_PBL_DAISY)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_DAISY)
					buffertrainername(2, TRAINER_PBL_DAISY)
					if (!defeated(TRAINER_PBL_DAISY)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_TWIN:
					setvar(VAR_TEMP_2, TRAINER_PBL_VIC_AND_DELL)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_VIC_AND_DELL)
					buffertrainername(2, TRAINER_PBL_VIC_AND_DELL)
					if (!defeated(TRAINER_PBL_VIC_AND_DELL)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_TUBER_F:
					setvar(VAR_TEMP_2, TRAINER_PBL_MINA)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_MINA)
					buffertrainername(2, TRAINER_PBL_MINA)
					if (!defeated(TRAINER_PBL_MINA)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_SWIMMER_F_WALKING:
					if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_CHALLENGE) == true)) {
						setvar(VAR_TEMP_2, TRAINER_PBL_ZACK_AND_COBY_LEVIATHAN_6_CHALLENGE)
					} else {
						setvar(VAR_TEMP_2, TRAINER_PBL_ZACK_AND_COBY_LEVIATHAN_6)
					}
					special(BufferTrainerPartyPokemon)
					buffertrainername(2, TRAINER_PBL_ZACK_AND_COBY_LEVIATHAN_6)
					if (!flag(FLAG_BEAT_LEVIATHAN_6)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("Leviathan {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("Leviathan {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("Leviathan {STR_VAR_3} is defeated!")
					}
			}
		case 7:
			message(format("Trainer Notebook open to\n{COLOR GREEN}Zone 7 - Gemini Heights{COLOR DARK_GRAY} and\l{COLOR GREEN}Zone 8 - Gemini Caves{COLOR DARK_GRAY}."))
			waitmessage
			buffertrainerclassname(1, TRAINER_PBL_MILLIE)
			buffertrainername(2, TRAINER_PBL_MILLIE)
			if (!defeated(TRAINER_PBL_MILLIE)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_GIRL_3)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_GIRL_3)
			}
			buffertrainerclassname(1, TRAINER_PBL_JAMAL)
			buffertrainername(2, TRAINER_PBL_JAMAL)
			if (!defeated(TRAINER_PBL_JAMAL)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_CAMPER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_CAMPER)
			}
			buffertrainerclassname(1, TRAINER_PBL_PAIGE)
			buffertrainername(2, TRAINER_PBL_PAIGE)
			if (!defeated(TRAINER_PBL_PAIGE)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_AROMA_LADY)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_AROMA_LADY)
			}
			buffertrainerclassname(1, TRAINER_PBL_SETH)
			buffertrainername(2, TRAINER_PBL_SETH)
			if (!defeated(TRAINER_PBL_SETH)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_RICH_BOY)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_RICH_BOY)
			}
			buffertrainerclassname(1, TRAINER_PBL_CONNIE)
			buffertrainername(2, TRAINER_PBL_CONNIE)
			if (!defeated(TRAINER_PBL_CONNIE)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_LASS)
			}
			buffertrainerclassname(1, TRAINER_PBL_PETER)
			buffertrainername(2, TRAINER_PBL_PETER)
			if (!defeated(TRAINER_PBL_PETER)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_YOUNGSTER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_YOUNGSTER)
			}
			buffertrainerclassname(1, TRAINER_PBL_WHITAKER)
			buffertrainername(2, TRAINER_PBL_WHITAKER)
			if (!defeated(TRAINER_PBL_WHITAKER)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BIRD_KEEPER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BIRD_KEEPER)
			}
			buffertrainername(2, TRAINER_PBL_BETTY_LEVIATHAN_7)
			if (!flag(FLAG_BEAT_LEVIATHAN_7)) {
				dynmultipush("{COLOR RED}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_LADY)
			} else {
				dynmultipush("{COLOR GREEN}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_LADY)
			}
			buffertrainerclassname(1, TRAINER_PBL_JIMMY)
			buffertrainername(2, TRAINER_PBL_JIMMY)
			if (!defeated(TRAINER_PBL_JIMMY)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_COLLECTOR)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_COLLECTOR)
			}
			buffertrainerclassname(1, TRAINER_PBL_EMILIANO)
			buffertrainername(2, TRAINER_PBL_EMILIANO)
			if (!defeated(TRAINER_PBL_EMILIANO)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_HIKER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_HIKER)
			}
			buffertrainerclassname(1, TRAINER_PBL_BECKHAM)
			buffertrainername(2, TRAINER_PBL_BECKHAM)
			if (!defeated(TRAINER_PBL_BECKHAM)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_POKEMANIAC)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_POKEMANIAC)
			}
			buffertrainerclassname(1, TRAINER_PBL_KAREN)
			buffertrainername(2, TRAINER_PBL_KAREN)
			if (!defeated(TRAINER_PBL_KAREN)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BACKPACKER_F)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BACKPACKER_F)
			}
			buffertrainerclassname(1, TRAINER_PBL_JAYDEN)
			buffertrainername(2, TRAINER_PBL_JAYDEN)
			if (!defeated(TRAINER_PBL_JAYDEN)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_HIKER + 400)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_HIKER + 400)
			}
			buffertrainerclassname(1, TRAINER_PBL_NEIL)
			buffertrainername(2, TRAINER_PBL_NEIL)
			if (!defeated(TRAINER_PBL_NEIL)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_RUIN_MANIAC)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_RUIN_MANIAC)
			}
			buffertrainerclassname(1, TRAINER_PBL_TAMARA)
			buffertrainername(2, TRAINER_PBL_TAMARA)
			if (!defeated(TRAINER_PBL_TAMARA)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_PICNICKER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_PICNICKER)
			}
			buffertrainername(2, TRAINER_PBL_ALISTAIR_LEVIATHAN_8)
			if (!flag(FLAG_BEAT_LEVIATHAN_8)) {
				dynmultipush("{COLOR RED}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_ROUGHNECK)
			} else {
				dynmultipush("{COLOR GREEN}Leviathan {STR_VAR_3}", OBJ_EVENT_GFX_ROUGHNECK)
			}
			dynmultistack(0, 0, FALSE, 6, FALSE, 0, DYN_MULTICHOICE_CB_SHOW_OBJECT)
			switch (var(VAR_RESULT)) {
				case OBJ_EVENT_GFX_GIRL_3:
					setvar(VAR_TEMP_2, TRAINER_PBL_MILLIE)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_MILLIE)
					buffertrainername(2, TRAINER_PBL_MILLIE)
					if (!defeated(TRAINER_PBL_MILLIE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_CAMPER:
					setvar(VAR_TEMP_2, TRAINER_PBL_JAMAL)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_JAMAL)
					buffertrainername(2, TRAINER_PBL_JAMAL)
					if (!defeated(TRAINER_PBL_JAMAL)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_AROMA_LADY:
					setvar(VAR_TEMP_2, TRAINER_PBL_PAIGE)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_PAIGE)
					buffertrainername(2, TRAINER_PBL_PAIGE)
					if (!defeated(TRAINER_PBL_PAIGE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_RICH_BOY:
					setvar(VAR_TEMP_2, TRAINER_PBL_SETH)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_SETH)
					buffertrainername(2, TRAINER_PBL_SETH)
					if (!defeated(TRAINER_PBL_SETH)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_LASS:
					setvar(VAR_TEMP_2, TRAINER_PBL_CONNIE)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_CONNIE)
					buffertrainername(2, TRAINER_PBL_CONNIE)
					if (!defeated(TRAINER_PBL_CONNIE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_YOUNGSTER:
					setvar(VAR_TEMP_2, TRAINER_PBL_PETER)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_PETER)
					buffertrainername(2, TRAINER_PBL_PETER)
					if (!defeated(TRAINER_PBL_PETER)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_BIRD_KEEPER:
					setvar(VAR_TEMP_2, TRAINER_PBL_WHITAKER)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_WHITAKER)
					buffertrainername(2, TRAINER_PBL_WHITAKER)
					if (!defeated(TRAINER_PBL_WHITAKER)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_LADY:
					if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_CHALLENGE) == true)) {
						setvar(VAR_TEMP_2, TRAINER_PBL_BETTY_LEVIATHAN_7_CHALLENGE)
					} else {
						setvar(VAR_TEMP_2, TRAINER_PBL_BETTY_LEVIATHAN_7)
					}
					special(BufferTrainerPartyPokemon)
					buffertrainername(2, TRAINER_PBL_BETTY_LEVIATHAN_7)
					if (!flag(FLAG_BEAT_LEVIATHAN_7)) {
						msgbox("Leviathan {STR_VAR_3} is ready to\nbattle!")
					} else {
						msgbox("Leviathan {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_COLLECTOR:
					setvar(VAR_TEMP_2, TRAINER_PBL_JIMMY)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_JIMMY)
					buffertrainername(2, TRAINER_PBL_JIMMY)
					if (!defeated(TRAINER_PBL_JIMMY)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_HIKER:
					setvar(VAR_TEMP_2, TRAINER_PBL_EMILIANO)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_EMILIANO)
					buffertrainername(2, TRAINER_PBL_EMILIANO)
					if (!defeated(TRAINER_PBL_EMILIANO)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_POKEMANIAC:
					setvar(VAR_TEMP_2, TRAINER_PBL_BECKHAM)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_BECKHAM)
					buffertrainername(2, TRAINER_PBL_BECKHAM)
					if (!defeated(TRAINER_PBL_BECKHAM)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_BACKPACKER_F:
					setvar(VAR_TEMP_2, TRAINER_PBL_KAREN)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_KAREN)
					buffertrainername(2, TRAINER_PBL_KAREN)
					if (!defeated(TRAINER_PBL_KAREN)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_HIKER + 400:
					setvar(VAR_TEMP_2, TRAINER_PBL_JAYDEN)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_JAYDEN)
					buffertrainername(2, TRAINER_PBL_JAYDEN)
					if (!defeated(TRAINER_PBL_JAYDEN)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_RUIN_MANIAC:
					setvar(VAR_TEMP_2, TRAINER_PBL_NEIL)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_NEIL)
					buffertrainername(2, TRAINER_PBL_NEIL)
					if (!defeated(TRAINER_PBL_NEIL)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_PICNICKER:
					setvar(VAR_TEMP_2, TRAINER_PBL_TAMARA)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_TAMARA)
					buffertrainername(2, TRAINER_PBL_TAMARA)
					if (!defeated(TRAINER_PBL_TAMARA)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_ROUGHNECK:
					if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_CHALLENGE) == true)) {
						setvar(VAR_TEMP_2, TRAINER_PBL_ALISTAIR_LEVIATHAN_8_CHALLENGE)
					} else {
						setvar(VAR_TEMP_2, TRAINER_PBL_ALISTAIR_LEVIATHAN_8)
					}
					special(BufferTrainerPartyPokemon)
					buffertrainername(2, TRAINER_PBL_ALISTAIR_LEVIATHAN_8)
					if (!flag(FLAG_BEAT_LEVIATHAN_8)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("Leviathan {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("Leviathan {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("Leviathan {STR_VAR_3} is defeated!")
					}
			}
		case 9:
			message(format("Trainer Notebook open to\n{COLOR GREEN}Zone 9 - Lushbranch Village{COLOR DARK_GRAY}."))
			waitmessage
			buffertrainerclassname(1, TRAINER_PBL_COOPER)
			buffertrainername(2, TRAINER_PBL_COOPER)
			if (!defeated(TRAINER_PBL_COOPER)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_NINJA_BOY)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_NINJA_BOY)
			}
			buffertrainerclassname(1, TRAINER_PBL_CARMINE)
			buffertrainername(2, TRAINER_PBL_CARMINE)
			if (!defeated(TRAINER_PBL_CARMINE)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BACKPACKER_F)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BACKPACKER_F)
			}
			buffertrainerclassname(1, TRAINER_PBL_JONATHAN)
			buffertrainername(2, TRAINER_PBL_JONATHAN)
			if (!defeated(TRAINER_PBL_JONATHAN)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BUG_CATCHER)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BUG_CATCHER)
			}
			buffertrainerclassname(1, TRAINER_PBL_CALVIN)
			buffertrainername(2, TRAINER_PBL_CALVIN)
			if (!defeated(TRAINER_PBL_CALVIN)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_FISHERMAN)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_FISHERMAN)
			}
			buffertrainerclassname(1, TRAINER_PBL_LUIS)
			buffertrainername(2, TRAINER_PBL_LUIS)
			if (!defeated(TRAINER_PBL_LUIS)) {
				dynmultipush("{COLOR RED}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BREEDER_M)
			} else {
				dynmultipush("{COLOR GREEN}{STR_VAR_2} {STR_VAR_3}", OBJ_EVENT_GFX_BREEDER_M)
			}
			buffertrainername(2, TRAINER_PBL_ARI)
			if (!defeated(TRAINER_PBL_ARI)) {
				dynmultipush("{COLOR RED}Winstrate {STR_VAR_3}", OBJ_EVENT_GFX_CAMPER)
			} else {
				dynmultipush("{COLOR GREEN}Winstrate {STR_VAR_3}", OBJ_EVENT_GFX_CAMPER)
			}
			buffertrainername(2, TRAINER_PBL_BERTHA)
			if (!defeated(TRAINER_PBL_BERTHA)) {
				dynmultipush("{COLOR RED}Winstrate {STR_VAR_3}", OBJ_EVENT_GFX_PICNICKER)
			} else {
				dynmultipush("{COLOR GREEN}Winstrate {STR_VAR_3}", OBJ_EVENT_GFX_PICNICKER)
			}
			buffertrainername(2, TRAINER_PBL_CASSANDRA)
			if (!defeated(TRAINER_PBL_CASSANDRA)) {
				dynmultipush("{COLOR RED}Winstrate {STR_VAR_3}", OBJ_EVENT_GFX_POKEFAN_F)
			} else {
				dynmultipush("{COLOR GREEN}Winstrate {STR_VAR_3}", OBJ_EVENT_GFX_POKEFAN_F)
			}
			buffertrainername(2, TRAINER_PBL_DOMINIC)
			if (!defeated(TRAINER_PBL_DOMINIC)) {
				dynmultipush("{COLOR RED}Winstrate {STR_VAR_3}", OBJ_EVENT_GFX_POKEFAN_M)
			} else {
				dynmultipush("{COLOR GREEN}Winstrate {STR_VAR_3}", OBJ_EVENT_GFX_POKEFAN_M)
			}
			buffertrainername(2, TRAINER_PBL_ERICA)
			if (!defeated(TRAINER_PBL_ERICA)) {
				dynmultipush("{COLOR RED}Winstrate {STR_VAR_3}", OBJ_EVENT_GFX_EXPERT_F)
			} else {
				dynmultipush("{COLOR GREEN}Winstrate {STR_VAR_3}", OBJ_EVENT_GFX_EXPERT_F)
			}
			dynmultistack(0, 0, FALSE, 6, FALSE, 0, DYN_MULTICHOICE_CB_SHOW_OBJECT)
			switch (var(VAR_RESULT)) {
				case OBJ_EVENT_GFX_NINJA_BOY:
					setvar(VAR_TEMP_2, TRAINER_PBL_COOPER)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_COOPER)
					buffertrainername(2, TRAINER_PBL_COOPER)
					if (!defeated(TRAINER_PBL_COOPER)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_BACKPACKER_F:
					setvar(VAR_TEMP_2, TRAINER_PBL_CARMINE)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_CARMINE)
					buffertrainername(2, TRAINER_PBL_CARMINE)
					if (!defeated(TRAINER_PBL_CARMINE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_BUG_CATCHER:
					setvar(VAR_TEMP_2, TRAINER_PBL_JONATHAN)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_JONATHAN)
					buffertrainername(2, TRAINER_PBL_JONATHAN)
					if (!defeated(TRAINER_PBL_JONATHAN)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_FISHERMAN:
					setvar(VAR_TEMP_2, TRAINER_PBL_CALVIN)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_CALVIN)
					buffertrainername(2, TRAINER_PBL_CALVIN)
					if (!defeated(TRAINER_PBL_CALVIN)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_BREEDER_M:
					setvar(VAR_TEMP_2, TRAINER_PBL_LUIS)
					special(BufferTrainerPartyPokemon)
					buffertrainerclassname(1, TRAINER_PBL_LUIS)
					buffertrainername(2, TRAINER_PBL_LUIS)
					if (!defeated(TRAINER_PBL_LUIS)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("{STR_VAR_2} {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("{STR_VAR_2} {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_CAMPER:
					if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_CHALLENGE) == true)) {
						setvar(VAR_TEMP_2, TRAINER_PBL_ARI_CHALLENGE)
					} else {
						setvar(VAR_TEMP_2, TRAINER_PBL_ARI)
					}
					special(BufferTrainerPartyPokemon)
					buffertrainername(2, TRAINER_PBL_ARI)
					if (!flag(FLAG_HIDE_ZONE9A_ARI_WINSTRATE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("Winstrate {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("Winstrate {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("Winstrate {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_PICNICKER:
					if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_CHALLENGE) == true)) {
						setvar(VAR_TEMP_2, TRAINER_PBL_BERTHA_CHALLENGE)
					} else {
						setvar(VAR_TEMP_2, TRAINER_PBL_BERTHA)
					}
					special(BufferTrainerPartyPokemon)
					buffertrainername(2, TRAINER_PBL_BERTHA)
					if (!flag(FLAG_HIDE_ZONE9A_ARI_WINSTRATE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("Winstrate {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("Winstrate {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("Winstrate {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_POKEFAN_F:
					if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_CHALLENGE) == true)) {
						setvar(VAR_TEMP_2, TRAINER_PBL_CASSANDRA_CHALLENGE)
					} else {
						setvar(VAR_TEMP_2, TRAINER_PBL_CASSANDRA)
					}
					special(BufferTrainerPartyPokemon)
					buffertrainername(2, TRAINER_PBL_CASSANDRA)
					if (!flag(FLAG_HIDE_ZONE9A_ARI_WINSTRATE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("Winstrate {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("Winstrate {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("Winstrate {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_POKEFAN_M:
					if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_CHALLENGE) == true)) {
						setvar(VAR_TEMP_2, TRAINER_PBL_DOMINIC_CHALLENGE)
					} else {
						setvar(VAR_TEMP_2, TRAINER_PBL_DOMINIC)
					}
					special(BufferTrainerPartyPokemon)
					buffertrainername(2, TRAINER_PBL_DOMINIC)
					if (!flag(FLAG_HIDE_ZONE9A_ARI_WINSTRATE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("Winstrate {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("Winstrate {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("Winstrate {STR_VAR_3} is defeated!")
					}
				case OBJ_EVENT_GFX_EXPERT_F:
					if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_CHALLENGE) == true)) {
						setvar(VAR_TEMP_2, TRAINER_PBL_ERICA_CHALLENGE)
					} else {
						setvar(VAR_TEMP_2, TRAINER_PBL_ERICA)
					}
					special(BufferTrainerPartyPokemon)
					buffertrainername(2, TRAINER_PBL_ERICA)
					if (!flag(FLAG_HIDE_ZONE9A_ARI_WINSTRATE)) {
						if (flag(FLAG_SETTINGS_FULL_INFO)) {
							msgbox("Winstrate {STR_VAR_3} is ready to\nbattle! They will use:\l{STR_VAR_1}!")
						} else {
							msgbox("Winstrate {STR_VAR_3} is ready to\nbattle!")
						}
					} else {
						msgbox("Winstrate {STR_VAR_3} is defeated!")
					}
			}

	}
	setvar(VAR_TEMP_2, 0)
	releaseall
	end
}

script Debug_CheatStart_PBL {
	setflag(FLAG_PORTENTIA_INTRO)
	setflag(FLAG_TIM_INTRO)
	setflag(FLAG_VARRICK_INTRO)
	setflag(FLAG_JULIA_INTRO)
	setflag(FLAG_LELOUCH_INTRO)
	setflag(FLAG_MARIE_INTRO)
	setflag(FLAG_JOY_INTRO)
	// music
	random(5)
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TRAINER_MUSIC, 0)
		case 1:
			setvar(VAR_TRAINER_MUSIC, 1)
		case 2:
			setvar(VAR_TRAINER_MUSIC, 2)
		case 3:
			setvar(VAR_TRAINER_MUSIC, 3)
		case 4:
			setvar(VAR_TRAINER_MUSIC, 4)
	}
	random(5)
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_WILD_MUSIC, 0)
		case 1:
			setvar(VAR_WILD_MUSIC, 1)
		case 2:
			setvar(VAR_WILD_MUSIC, 2)
		case 3:
			setvar(VAR_WILD_MUSIC, 3)
		case 4:
			setvar(VAR_WILD_MUSIC, 4)
	}
	random(5)
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_LEVIATHAN_MUSIC, 0)
		case 1:
			setvar(VAR_LEVIATHAN_MUSIC, 1)
		case 2:
			setvar(VAR_LEVIATHAN_MUSIC, 2)
		case 3:
			setvar(VAR_LEVIATHAN_MUSIC, 3)
		case 4:
			setvar(VAR_LEVIATHAN_MUSIC, 4)
	}
	additem(ITEM_RARE_CANDY, 900)
	removemoney(2500)
	additem(ITEM_POTION, 6)
	additem(ITEM_PARALYZE_HEAL, 2)
	additem(ITEM_ANTIDOTE, 2)
	// zone 0 items
	additem(ITEM_WAILMER_PAIL)
	additem(ITEM_EVERSTONE)
	additem(ITEM_ORAN_BERRY, 2)
	questmenu(QUEST_MENU_SET_ACTIVE, QUEST_SIGNS)
	questmenu(QUEST_MENU_SET_ACTIVE, QUEST_SAVES)
	questmenu(QUEST_MENU_SET_ACTIVE, QUEST_POKEDEX)
	completesubquest(QUEST_SIGNS, SUB_QUEST_1)
	completesubquest(QUEST_SIGNS, SUB_QUEST_2)
	completesubquest(QUEST_SIGNS, SUB_QUEST_3)
	completesubquest(QUEST_SIGNS, SUB_QUEST_4)
	completesubquest(QUEST_SIGNS, SUB_QUEST_5)
	completesubquest(QUEST_SIGNS, SUB_QUEST_6)
	completesubquest(QUEST_SIGNS, SUB_QUEST_7)
	completesubquest(QUEST_SIGNS, SUB_QUEST_8)
	completesubquest(QUEST_SIGNS, SUB_QUEST_9)
	setflag(FLAG_ZONE0B_SHOWN_POKEDEX_ENTRIES)
	setvar(VAR_ZONE_0_STATE, 2)
	// zone S1
	setvar(VAR_TEMP_0, 51) // wild define gWildMonHeaders in src/data/wild_encounters.h
	msgbox(format("Zone S1 grass?"), MSGBOX_YESNO)
	if (var(VAR_RESULT) == NO) {
		setvar(VAR_TEMP_0, 52) // wild define gWildMonHeaders in src/data/wild_encounters.h
	}
	setvar(VAR_TEMP_1, 3) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	// zone S2
	setvar(VAR_TEMP_0, 53) // wild define gWildMonHeaders in src/data/wild_encounters.h
	msgbox(format("Zone S2 grass?"), MSGBOX_YESNO)
	if (var(VAR_RESULT) == NO) {
		setflag(FLAG_TEMP_1) // special encounter
	}
	setvar(VAR_TEMP_1, 5) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	// zone 0
	setvar(VAR_TEMP_0, 0) // wild define gWildMonHeaders in src/data/wild_encounters.h
	msgbox(format("Zone 0 grass?"), MSGBOX_YESNO)
	if (var(VAR_RESULT) == NO) {
		setflag(FLAG_TEMP_1) // special encounter
	}
	setvar(VAR_TEMP_1, 3) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	// zone 1
	message(format("Zone 1 options"))
	dynmultichoice(0, 0, FALSE, 3, 0, DYN_MULTICHOICE_CB_NONE, "Grass", "Tree")
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_0, 1) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 1:
			setvar(VAR_TEMP_0, 1) // wild define gWildMonHeaders in src/data/wild_encounters.h
			setflag(FLAG_TEMP_1) // special encounter
		case MULTI_B_PRESSED:
			closemessage
			setvar(VAR_ZONE, 1)
			setvar(VAR_LEVEL_CAP, 7)
			warp(MAP_ZONE_SANCTUARY, 255, 38, 11)
			waitstate
			end
	}
	call(Debug_CheatStart_PBL_GenerateMon)
	// zone 1 gwf
	message(format("Zone 1 gwf"))
	dynmultichoice(0, 0, TRUE, 3, 0, DYN_MULTICHOICE_CB_NONE, "Grass", "Fire", "Water")
	switch (var(VAR_RESULT)) {
		case 0:
			random(4)
			switch (var(VAR_RESULT)) {
				case 0:
					setvar(VAR_TEMP_0, SPECIES_PANSAGE)
				case 1:
					setvar(VAR_TEMP_0, SPECIES_GOSSIFLEUR)
				case 2:
					setvar(VAR_TEMP_0, SPECIES_SUNKERN)
				case 3:
					setvar(VAR_TEMP_0, SPECIES_CHERUBI)
			}
		case 1:
			random(4)
			switch (var(VAR_RESULT)) {
				case 0:
					setvar(VAR_TEMP_0, SPECIES_PANSEAR)
				case 1:
					setvar(VAR_TEMP_0, SPECIES_VULPIX)
				case 2:
					setvar(VAR_TEMP_0, SPECIES_SLUGMA)
				case 3:
					setvar(VAR_TEMP_0, SPECIES_LITLEO)
			}
		case 2:
			random(4)
			switch (var(VAR_RESULT)) {
				case 0:
					setvar(VAR_TEMP_0, SPECIES_PANPOUR)
				case 1:
					setvar(VAR_TEMP_0, SPECIES_BARBOACH)
				case 2:
					setvar(VAR_TEMP_0, SPECIES_GOLDEEN)
				case 3:
					setvar(VAR_TEMP_0, SPECIES_FINNEON)
			}
	}
	setvar(VAR_TEMP_1, 5) // level
	call(Debug_CheatStart_PBL_GiveMon)
	setflag(FLAG_ZONE1A_RECEIVED_FWG)
	completesubquest(QUEST_PBL, SUB_QUEST_1)
	// zone 1 items
	additem(ITEM_QUICK_CLAW)
	additem(ITEM_EXP_SHARE)
	additem(ITEM_INFINITE_REPEL)
	completesubquest(QUEST_SIGNS, SUB_QUEST_10)
	completesubquest(QUEST_SIGNS, SUB_QUEST_11)
	completesubquest(QUEST_SIGNS, SUB_QUEST_12)
	settrainerflag(TRAINER_PBL_NINA)
	settrainerflag(TRAINER_PBL_MARIAM)
	settrainerflag(TRAINER_PBL_OSCAR)
	setflag(FLAG_BEAT_LEVIATHAN_1)
	// zone 2
	message(format("Zone 2 options"))
	dynmultichoice(0, 0, FALSE, 3, 0, DYN_MULTICHOICE_CB_NONE, "Grass A", "Tunnel", "Grass B")
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_0, 2) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 1:
			setvar(VAR_TEMP_0, 4) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 2:
			setvar(VAR_TEMP_0, 3) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case MULTI_B_PRESSED:
			closemessage
			setvar(VAR_ZONE, 2)
			setvar(VAR_LEVEL_CAP, 9)
			end
	}
	setvar(VAR_TEMP_1, 5) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	// zone 2 bug
	random(10)
	switch (var(VAR_RESULT)) {
		case 0:
		case 1:
			setvar(VAR_TEMP_0, SPECIES_WURMPLE)
		case 2:
			setvar(VAR_TEMP_0, SPECIES_CATERPIE)
		case 3:
			setvar(VAR_TEMP_0, SPECIES_WEEDLE)
		case 4:
			setvar(VAR_TEMP_0, SPECIES_SCATTERBUG)
		case 5:
			setvar(VAR_TEMP_0, SPECIES_SPINARAK)
		case 6:
			setvar(VAR_TEMP_0, SPECIES_LEDYBA)
		case 7:
			setvar(VAR_TEMP_0, SPECIES_KRICKETOT)
		case 8:
			setvar(VAR_TEMP_0, SPECIES_TAROUNTULA)
		case 9:
			setvar(VAR_TEMP_0, SPECIES_SEWADDLE)
	}
	setvar(VAR_TEMP_1, 6) // level
	call(Debug_CheatStart_PBL_GiveMon)
	setflag(FLAG_ZONE2B_NUZLOCKE_BOUGHT_BUG)
	completesubquest(QUEST_PBL, SUB_QUEST_2)
	// zone 2 items
	additem(ITEM_SILK_SCARF)
	additem(ITEM_TM_BUG_BITE)
	additem(ITEM_ORAN_BERRY, 5)
	additem(ITEM_CHERI_BERRY, 2)
	additem(ITEM_CHESTO_BERRY, 2)
	additem(ITEM_RAWST_BERRY, 2)
	additem(ITEM_ASPEAR_BERRY, 2)
	additem(ITEM_PECHA_BERRY, 2)
	setflag(FLAG_SYS_DEXNAV_GET)
	setflag(FLAG_SYS_DEXNAV_SEARCH)
	completesubquest(QUEST_SIGNS, SUB_QUEST_13)
	completesubquest(QUEST_SIGNS, SUB_QUEST_14)
	completesubquest(QUEST_SIGNS, SUB_QUEST_15)
	completesubquest(QUEST_SIGNS, SUB_QUEST_16)
	completesubquest(QUEST_SIGNS, SUB_QUEST_17)
	settrainerflag(TRAINER_PBL_POLLY)
	settrainerflag(TRAINER_PBL_JEREMIAH)
	settrainerflag(TRAINER_PBL_JOSH)
	settrainerflag(TRAINER_PBL_HARPER)
	settrainerflag(TRAINER_PBL_ARTHUR)
	setflag(FLAG_BEAT_LEVIATHAN_2)
	// zone 3
	message(format("Zone 3 options"))
	dynmultichoice(0, 0, FALSE, 3, 0, DYN_MULTICHOICE_CB_NONE, "Grass", "Water")
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_0, 5) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 1:
			setvar(VAR_TEMP_0, 5) // wild define gWildMonHeaders in src/data/wild_encounters.h
			setflag(FLAG_TEMP_1) // special encounter
		case MULTI_B_PRESSED:
			closemessage
			setvar(VAR_ZONE, 3)
			setvar(VAR_LEVEL_CAP, 11)
			end
	}
	setvar(VAR_TEMP_1, 7) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	completesubquest(QUEST_PBL, SUB_QUEST_3)
	// zone 3 items
	additem(ITEM_GOOD_ROD)
	completesubquest(QUEST_SIGNS, SUB_QUEST_18)
	settrainerflag(TRAINER_PBL_JEMMA)
	settrainerflag(TRAINER_PBL_PATRICK)
	settrainerflag(TRAINER_PBL_ANNABELLE)
	settrainerflag(TRAINER_PBL_BORIS)
	settrainerflag(TRAINER_PBL_RICHARD)
	setflag(FLAG_BEAT_LEVIATHAN_3)
	// zone 4
	message(format("Zone 4 options"))
	dynmultichoice(0, 0, FALSE, 5, 0, DYN_MULTICHOICE_CB_NONE, "A", "B", "C", "D", "E")
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_0, 6) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 1:
			setvar(VAR_TEMP_0, 7) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 2:
			setvar(VAR_TEMP_0, 8) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 3:
			setvar(VAR_TEMP_0, 9) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 4:
			setvar(VAR_TEMP_0, 10) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case MULTI_B_PRESSED:
			closemessage
			setvar(VAR_ZONE, 4)
			setvar(VAR_LEVEL_CAP, 13)
			end
	}
	setvar(VAR_TEMP_1, 9) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	completesubquest(QUEST_PBL, SUB_QUEST_4)
	// zone 4 gem
	random(8)
	switch(var(VAR_RESULT)) {
		case 0:
			additem(ITEM_WATER_GEM)
		case 1:
			additem(ITEM_ELECTRIC_GEM)
		case 2:
			additem(ITEM_FIRE_GEM)
		case 3:
			additem(ITEM_PSYCHIC_GEM)
		case 4:
			additem(ITEM_DARK_GEM)
		case 5:
			additem(ITEM_GRASS_GEM)
		case 6:
			additem(ITEM_ICE_GEM)
		case 7:
			additem(ITEM_FAIRY_GEM)
	}
	setflag(FLAG_ZONE4A_RECEIVED_GEM)
	// zone 4 items
	additem(ITEM_SILVER_POWDER)
	additem(ITEM_MUSCLE_BAND)
	additem(ITEM_WISE_GLASSES)
	additem(ITEM_TWISTED_SPOON)
	additem(ITEM_POISON_BARB)
	additem(ITEM_TM_SNARL)
	setflag(FLAG_SYS_START_MENU_PC_GET)
	additem(ITEM_BURN_HEAL, 2)
	additem(ITEM_AWAKENING, 2)
	completesubquest(QUEST_SIGNS, SUB_QUEST_19)
	completesubquest(QUEST_SIGNS, SUB_QUEST_20)
	completesubquest(QUEST_SIGNS, SUB_QUEST_21)
	completesubquest(QUEST_SIGNS, SUB_QUEST_22)
	completesubquest(QUEST_SIGNS, SUB_QUEST_23)
	settrainerflag(TRAINER_PBL_HERMAN)
	settrainerflag(TRAINER_PBL_RALPH)
	settrainerflag(TRAINER_PBL_CALLIE)
	settrainerflag(TRAINER_PBL_SANTIAGO)
	settrainerflag(TRAINER_PBL_CHLOE_AND_KAYA)
	settrainerflag(TRAINER_PBL_FRED)
	settrainerflag(TRAINER_PBL_LUCIA)
	setflag(FLAG_BEAT_LEVIATHAN_4)
	// zone 5
	message(format("Zone 5 options"))
	dynmultichoice(0, 0, FALSE, 5, 0, DYN_MULTICHOICE_CB_NONE, "Forest", "Grassland")
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_0, 11) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 1:
			setvar(VAR_TEMP_0, 12) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case MULTI_B_PRESSED:
			closemessage
			setvar(VAR_ZONE, 5)
			setvar(VAR_LEVEL_CAP, 13)
			end
	}
	setvar(VAR_TEMP_1, 11) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	// zone 5 pika
	random(10)
	switch (var(VAR_RESULT)) {
		case 0:
		case 1:
			setvar(VAR_TEMP_0, SPECIES_PACHIRISU)
		case 2:
		case 3:
			setvar(VAR_TEMP_0, SPECIES_DEDENNE)
		case 4:
		case 5:
			setvar(VAR_TEMP_0, SPECIES_MORPEKO)
		case 6:
		case 7:
			setvar(VAR_TEMP_0, SPECIES_EMOLGA)
		case 8:
			setvar(VAR_TEMP_0, SPECIES_PLUSLE)
		case 9:
			setvar(VAR_TEMP_0, SPECIES_MINUN)
	}
	setvar(VAR_TEMP_1, 12) // level
	call(Debug_CheatStart_PBL_GiveMon)
	setflag(FLAG_ZONE5B_NUZLOCKE_BOUGHT_PIKACLONE)
	completesubquest(QUEST_PBL, SUB_QUEST_5)
	// zone 5 items
	additem(ITEM_METRONOME)
	additem(ITEM_QUICK_BALL)
	additem(ITEM_MIRACLE_SEED)
	additem(ITEM_NORMAL_GEM)
	additem(ITEM_BUG_GEM)
	additem(ITEM_GRASS_GEM)
	additem(ITEM_EVIOLITE)
	additem(ITEM_RED_SHARD, 5)
	settrainerflag(TRAINER_PBL_ANNE_AND_JUNE)
	settrainerflag(TRAINER_PBL_NOVA_AND_CORA)
	settrainerflag(TRAINER_PBL_CLINTON)
	settrainerflag(TRAINER_PBL_REBECCA)
	settrainerflag(TRAINER_PBL_RYAN)
	settrainerflag(TRAINER_PBL_CAITLYN)
	settrainerflag(TRAINER_PBL_KENNETH)
	settrainerflag(TRAINER_PBL_KEVIN)
	setflag(FLAG_BEAT_LEVIATHAN_5)
	addmoney(1000)
	// zone 6
	message(format("Zone 6 options"))
	dynmultichoice(0, 0, FALSE, 5, 0, DYN_MULTICHOICE_CB_NONE, "Grass", "Water")
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_0, 13) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 1:
			setvar(VAR_TEMP_0, 13) // wild define gWildMonHeaders in src/data/wild_encounters.h
			setflag(FLAG_TEMP_1) // special encounter
		case MULTI_B_PRESSED:
			closemessage
			setvar(VAR_ZONE, 6)
			setvar(VAR_LEVEL_CAP, 15)
			end
	}
	setvar(VAR_TEMP_1, 13) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	completesubquest(QUEST_PBL, SUB_QUEST_6)
	// zone 6 items
	additem(ITEM_NEST_BALL)
	additem(ITEM_NET_BALL)
	additem(ITEM_TM_DRAINING_KISS)
	additem(ITEM_WATER_GEM)
	additem(ITEM_FLYING_GEM)
	additem(ITEM_ICE_GEM)
	additem(ITEM_SLEDGEHAMMER)
	additem(ITEM_SUPER_POTION, 2)
	completesubquest(QUEST_SIGNS, SUB_QUEST_24)
	settrainerflag(TRAINER_PBL_GILBERT)
	settrainerflag(TRAINER_PBL_MELANIE)
	settrainerflag(TRAINER_PBL_CONSTANCE)
	settrainerflag(TRAINER_PBL_FRANK)
	settrainerflag(TRAINER_PBL_DUDLEY)
	settrainerflag(TRAINER_PBL_DAISY)
	settrainerflag(TRAINER_PBL_VIC_AND_DELL)
	settrainerflag(TRAINER_PBL_MINA)
	setflag(FLAG_BEAT_LEVIATHAN_6)
	addmoney(1000)
	// zone 7
	message(format("Zone 7 options"))
	dynmultichoice(0, 0, FALSE, 5, 0, DYN_MULTICHOICE_CB_NONE, "Grass", "Tree")
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_0, 14) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 1:
			setvar(VAR_TEMP_0, 14) // wild define gWildMonHeaders in src/data/wild_encounters.h
			setflag(FLAG_TEMP_1) // special encounter
		case MULTI_B_PRESSED:
			closemessage
			setvar(VAR_ZONE, 7)
			setvar(VAR_LEVEL_CAP, 17)
			end
	}
	setvar(VAR_TEMP_1, 15) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	// zone 8
	message(format("Zone 8 options"))
	dynmultichoice(0, 0, TRUE, 5, 0, DYN_MULTICHOICE_CB_NONE, "A", "B", "C")
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_0, 15) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 1:
			setvar(VAR_TEMP_0, 16) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 2:
			setvar(VAR_TEMP_0, 17) // wild define gWildMonHeaders in src/data/wild_encounters.h
	}
	setvar(VAR_TEMP_1, 16) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	completesubquest(QUEST_PBL, SUB_QUEST_7)
	completesubquest(QUEST_PBL, SUB_QUEST_8)
	// zone 7 & 8 items
	additem(ITEM_SHARP_BEAK)
	additem(ITEM_ROCK_GEM)
	additem(ITEM_FIGHTING_GEM)
	additem(ITEM_PSYCHIC_GEM)
	additem(ITEM_BLACK_BELT)
	additem(ITEM_SITRUS_BERRY, 5)
	additem(ITEM_MAGNET)
	additem(ITEM_HARD_STONE)
	additem(ITEM_DUSK_BALL)
	additem(ITEM_FULL_HEAL)
	additem(ITEM_TM_THIEF)
	additem(ITEM_TM_ROCK_TOMB)
	additem(ITEM_PARALYZE_HEAL, 2)
	additem(ITEM_ANTIDOTE, 2)
	additem(ITEM_GREAT_BALL)
	additem(ITEM_POTION, 5)
	additem(ITEM_SUPER_POTION, 2)
	additem(ITEM_MACHETE)
	additem(ITEM_TM_HIDDEN_POWER)
	completesubquest(QUEST_SIGNS, SUB_QUEST_25)
	completesubquest(QUEST_SIGNS, SUB_QUEST_26)
	settrainerflag(TRAINER_PBL_MILLIE)
	settrainerflag(TRAINER_PBL_JAMAL)
	settrainerflag(TRAINER_PBL_PAIGE)
	settrainerflag(TRAINER_PBL_SETH)
	settrainerflag(TRAINER_PBL_CONNIE)
	settrainerflag(TRAINER_PBL_PETER)
	settrainerflag(TRAINER_PBL_WHITAKER)
	settrainerflag(TRAINER_PBL_JIMMY)
	settrainerflag(TRAINER_PBL_EMILIANO)
	settrainerflag(TRAINER_PBL_BECKHAM)
	settrainerflag(TRAINER_PBL_KAREN)
	settrainerflag(TRAINER_PBL_JAYDEN)
	settrainerflag(TRAINER_PBL_NEIL)
	settrainerflag(TRAINER_PBL_TAMARA)
	setflag(FLAG_BEAT_LEVIATHAN_7)
	setflag(FLAG_BEAT_LEVIATHAN_8)
	// zone 9
	message(format("Zone 9 options"))
	dynmultichoice(0, 0, FALSE, 5, 0, DYN_MULTICHOICE_CB_NONE, "Grass", "Water")
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_0, 18) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 1:
			setvar(VAR_TEMP_0, 18) // wild define gWildMonHeaders in src/data/wild_encounters.h
			setflag(FLAG_TEMP_1) // special encounter
		case MULTI_B_PRESSED:
			closemessage
			setvar(VAR_ZONE, 9)
			setvar(VAR_LEVEL_CAP, 20)
			end
	}
	setvar(VAR_TEMP_1, 18) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	completesubquest(QUEST_PBL, SUB_QUEST_9)
	// zone 9 items
	additem(ITEM_BIG_ROOT)
	additem(ITEM_TM_PLUCK)
	additem(ITEM_POISON_GEM)
	additem(ITEM_STEEL_GEM)
	additem(ITEM_DARK_GEM)
	additem(ITEM_MYSTIC_WATER)
	additem(ITEM_CHARCOAL)
	additem(ITEM_TM_RETALIATE)
	completesubquest(QUEST_SIGNS, SUB_QUEST_27)
	completesubquest(QUEST_SIGNS, SUB_QUEST_28)
	settrainerflag(TRAINER_PBL_COOPER)
	settrainerflag(TRAINER_PBL_CARMINE)
	settrainerflag(TRAINER_PBL_JONATHAN)
	settrainerflag(TRAINER_PBL_CALVIN)
	settrainerflag(TRAINER_PBL_LUIS)
	settrainerflag(TRAINER_PBL_ARI)
	settrainerflag(TRAINER_PBL_ARI_CHALLENGE)
	settrainerflag(TRAINER_PBL_BERTHA)
	settrainerflag(TRAINER_PBL_BERTHA_CHALLENGE)
	settrainerflag(TRAINER_PBL_CASSANDRA)
	settrainerflag(TRAINER_PBL_CASSANDRA_CHALLENGE)
	settrainerflag(TRAINER_PBL_DOMINIC)
	settrainerflag(TRAINER_PBL_DOMINIC_CHALLENGE)
	settrainerflag(TRAINER_PBL_ERICA)
	settrainerflag(TRAINER_PBL_ERICA_CHALLENGE)
	// zone 10
	message(format("Zone 10 options"))
	dynmultichoice(0, 0, FALSE, 5, 0, DYN_MULTICHOICE_CB_NONE, "Sand", "Ruin")
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_0, 19) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 1:
			setvar(VAR_TEMP_0, 20) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case MULTI_B_PRESSED:
			closemessage
			setvar(VAR_ZONE, 11)
			setvar(VAR_LEVEL_CAP, 23)
			end
	}
	setvar(VAR_TEMP_1, 19) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	completesubquest(QUEST_PBL, SUB_QUEST_10)
	// zone 10 items
	additem(ITEM_TM_SCORCHING_SANDS)
	additem(ITEM_FIRE_GEM)
	additem(ITEM_ELECTRIC_GEM)
	additem(ITEM_GROUND_GEM)
	additem(ITEM_SOFT_SAND)
	additem(ITEM_BLACK_GLASSES)
	additem(ITEM_HEAVY_DUTY_BOOTS)
	additem(ITEM_SAFETY_GOGGLES)
	additem(ITEM_TM_BULLDOZE)
	additem(ITEM_TERA_ORB)
	additem(ITEM_BLUE_SHARD, 5)
	additem(ITEM_TM_STEEL_WING)
	settrainerflag(TRAINER_PBL_ALANA)
	settrainerflag(TRAINER_PBL_JACOB)
	settrainerflag(TRAINER_PBL_DEWEY)
	settrainerflag(TRAINER_PBL_ERNEST)
	settrainerflag(TRAINER_PBL_KYLE)
	settrainerflag(TRAINER_PBL_ELIAS)
	settrainerflag(TRAINER_PBL_PEARLIE)
	settrainerflag(TRAINER_PBL_SUSAN)
	settrainerflag(TRAINER_PBL_CONRAD)
	settrainerflag(TRAINER_PBL_BRETT)
	setflag(FLAG_BEAT_LEVIATHAN_9)
	setflag(FLAG_ZONE10B_RECEIVED_TM_STEEL_WING)
	// zone 11
	message(format("Zone 11 options"))
	dynmultichoice(0, 0, FALSE, 5, 0, DYN_MULTICHOICE_CB_NONE, "Grass")
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_0, 21) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case MULTI_B_PRESSED:
			closemessage
			setvar(VAR_ZONE, 11)
			setvar(VAR_LEVEL_CAP, 23)
			end
	}
	setvar(VAR_TEMP_1, 21) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	completesubquest(QUEST_PBL, SUB_QUEST_11)
	// zone 11 items
	additem(ITEM_TM_GRASS_KNOT)
	additem(ITEM_TM_TAUNT)
	additem(ITEM_MOON_STONE)
	additem(ITEM_SPELL_TAG)
	additem(ITEM_FAIRY_GEM)
	additem(ITEM_GHOST_GEM)
	additem(ITEM_DRAGON_GEM)
	additem(ITEM_FAIRY_FEATHER)
	additem(ITEM_TM_STEEL_WING)
	settrainerflag(TRAINER_PBL_JEANETTE)
	settrainerflag(TRAINER_PBL_EMMA_AND_LEO)
	settrainerflag(TRAINER_PBL_JOEL)
	settrainerflag(TRAINER_PBL_MARION)
	settrainerflag(TRAINER_PBL_REGINA)
	setflag(FLAG_BEAT_LEVIATHAN_10)
	// zone 12
	message(format("Zone 12 options"))
	dynmultichoice(0, 0, FALSE, 5, 0, DYN_MULTICHOICE_CB_NONE, "Grass", "Water")
	switch (var(VAR_RESULT)) {
		case 0:
			setvar(VAR_TEMP_0, 22) // wild define gWildMonHeaders in src/data/wild_encounters.h
		case 1:
			setvar(VAR_TEMP_0, 22) // wild define gWildMonHeaders in src/data/wild_encounters.h
			setflag(FLAG_TEMP_1) // special encounter
		case MULTI_B_PRESSED:
			closemessage
			setvar(VAR_ZONE, 12)
			setvar(VAR_LEVEL_CAP, 24)
			end
	}
	setvar(VAR_TEMP_1, 21) // level
	call(Debug_CheatStart_PBL_GenerateMon)
	completesubquest(QUEST_PBL, SUB_QUEST_12)
	// zone 12 items
	additem(ITEM_TM_BRICK_BREAK)
	additem(ITEM_THUNDER_STONE)
	additem(ITEM_FIRE_STONE)
	additem(ITEM_WATER_STONE)
	additem(ITEM_LEAF_STONE)
	settrainerflag(TRAINER_PBL_ESSENCE)
	settrainerflag(TRAINER_PBL_DOLORES)
	settrainerflag(TRAINER_PBL_GENIE)
	settrainerflag(TRAINER_PBL_ABIGAIL)
	settrainerflag(TRAINER_PBL_FEDERICO)
	settrainerflag(TRAINER_PBL_ROMULUS)
	settrainerflag(TRAINER_PBL_JULIE)
	settrainerflag(TRAINER_PBL_HILDA)
	settrainerflag(TRAINER_PBL_TREVOR)
	settrainerflag(TRAINER_PBL_RUFUS)
	settrainerflag(TRAINER_PBL_KINLEY)
	settrainerflag(TRAINER_PBL_REID)
	setflag(FLAG_BEAT_LEVIATHAN_11)
	// end
	setvar(VAR_ZONE, 13)
	setvar(VAR_LEVEL_CAP, 26)
	release
	end
}

script Debug_CheatStart_PBL_GenerateMon {
	callnative(DebugCheatStartGenerateMon)
	call(Debug_CheatStart_PBL_GiveMon)
}

script Debug_CheatStart_PBL_GiveMon {
	givemon(VAR_TEMP_0, VAR_TEMP_1, ITEM_NONE)
	bufferspeciesname(0, VAR_TEMP_0)
	msgbox(format("Obtained {STR_VAR_1}!"))
}

movement Common_Movement_WalkDown2 {
	walk_down * 2
}

movement Common_Movement_WalkLeft2 {
	walk_left * 2
}

movement Common_Movement_WalkRight2 {
	walk_right * 2
}

movement Common_Movement_WalkUp3 {
	walk_up * 3
}

movement Common_Movement_WalkDown3 {
	walk_down * 3
}

movement Common_Movement_WalkLeft3 {
	walk_left * 3
}

movement Common_Movement_WalkRight3 {
	walk_right * 3
}

movement Common_Movement_WalkDown4 {
	walk_down * 4
}

movement Common_Movement_WalkLeft4 {
	walk_left * 4
}

movement Common_Movement_WalkRight4 {
	walk_right * 4
}

movement Common_Movement_WalkUp5 {
	walk_up * 5
}

movement Common_Movement_WalkDown5 {
	walk_down * 5
}

movement Common_Movement_WalkLeft5 {
	walk_left * 5
}

movement Common_Movement_WalkRight5 {
	walk_right * 5
}

movement Common_Movement_WalkDown6 {
	walk_down * 6
}

movement Common_Movement_WalkLeft6 {
	walk_left * 6
}

movement Common_Movement_WalkRight6 {
	walk_right * 6
}

movement Common_Movement_Colress_WalkDown {
	walk_down * 3
}

movement Common_Movement_Colress_WalkUp {
	walk_up * 3
	face_down
}

script EventScript_UseFlash_PBL {
	msgbox(format("{PLAYER} used the Flashlight!"), MSGBOX_DEFAULT)
	closemessage
	animateflash(1)
	setflashlevel(1)
	releaseall
	end
}

script EventScript_UseCut_PBL {
	lockall
	if (checkitem(ITEM_MACHETE) == FALSE) {
		msgbox(format("This shrub is blocking the way."), MSGBOX_DEFAULT)
		releaseall
		end
	}
	msgbox("{PLAYER} used the Machete!", MSGBOX_DEFAULT)
	dofieldeffect(FLDEFF_USE_CUT_ON_TREE)
	waitstate
	applymovement(VAR_LAST_TALKED, moves(cut_tree))
	waitmovement(0)
	removeobject(VAR_LAST_TALKED)
	releaseall
	end
}

script EventScript_UseRockSmash_PBL {
	lockall
	if (checkitem(ITEM_SLEDGEHAMMER) == FALSE) {
		msgbox(format("It's a rugged rock."), MSGBOX_DEFAULT)
		releaseall
		end
	}
	msgbox("{PLAYER} used the Sledgehammer!", MSGBOX_DEFAULT)
	dofieldeffect(FLDEFF_USE_ROCK_SMASH)
	waitstate
	applymovement(VAR_LAST_TALKED, moves(rock_smash_break))
	waitmovement(0)
	removeobject(VAR_LAST_TALKED)
	special(RockSmashWildEncounter)
	if (var(VAR_RESULT) == TRUE) {
		waitstate
		releaseall
		end
	}
	if ((flag(FLAG_SETTINGS_BRUTAL) == true) || (flag(FLAG_SETTINGS_RED_THUMB) == true)) {
		releaseall
		end
	}
	random(100)
	switch(var(VAR_RESULT)) {
		case 0:
		case 1:
		case 2:
		case 3:
		case 4:
		case 5:
		case 6:
		case 7:
		case 8:
		case 9:
		case 10:
		case 11:
		case 12:
		case 13:
		case 14:
		case 15:
		case 16:
		case 17:
		case 18:
		case 19:
		case 20:
		case 21:
			finditem(ITEM_RED_SHARD, 1)
		case 22:
		case 23:
		case 24:
		case 25:
		case 26:
		case 27:
		case 28:
		case 29:
		case 30:
		case 31:
		case 32:
		case 33:
		case 34:
		case 35:
		case 36:
			if (var(VAR_ZONE) > 10) {
				finditem(ITEM_BLUE_SHARD, 1)
			}
		case 37:
		case 38:
		case 39:
		case 40:
		case 41:
		case 42:
		case 43:
		case 44:
		case 45:
		case 46:
			if (var(VAR_ZONE) > 20) {
				finditem(ITEM_YELLOW_SHARD, 1)
			}
		case 47:
		case 48:
		case 49:
		case 50:
		case 51:
			if (var(VAR_ZONE) > 30) {
				finditem(ITEM_GREEN_SHARD, 1)
			}
		case 52:
			finditem(ITEM_NORMAL_GEM, 1)
		case 53:
			finditem(ITEM_FIRE_GEM, 1)
		case 54:
			finditem(ITEM_WATER_GEM, 1)
		case 55:
			finditem(ITEM_ELECTRIC_GEM, 1)
		case 56:
			finditem(ITEM_GRASS_GEM, 1)
		case 57:
			finditem(ITEM_ICE_GEM, 1)
		case 58:
			finditem(ITEM_FIGHTING_GEM, 1)
		case 59:
			finditem(ITEM_POISON_GEM, 1)
		case 60:
			finditem(ITEM_GROUND_GEM, 1)
		case 61:
			finditem(ITEM_FLYING_GEM, 1)
		case 62:
			finditem(ITEM_PSYCHIC_GEM, 1)
		case 63:
			finditem(ITEM_BUG_GEM, 1)
		case 64:
			finditem(ITEM_ROCK_GEM, 1)
		case 65:
			finditem(ITEM_GHOST_GEM, 1)
		case 66:
			finditem(ITEM_DRAGON_GEM, 1)
		case 67:
			finditem(ITEM_DARK_GEM, 1)
		case 68:
			finditem(ITEM_STEEL_GEM, 1)
		case 69:
			finditem(ITEM_FAIRY_GEM, 1)
	}
	releaseall
	end
}

script EventScript_UseStrength_PBL {
	lockall
	if (flag(FLAG_SYS_USE_STRENGTH) == TRUE) {
		msgbox(format("It's now possible to move boulders around."), MSGBOX_DEFAULT)
		releaseall
		end
	}
	if (checkitem(ITEM_POWER_GLOVE) == FALSE) {
		msgbox(format("It's a big boulder, but it's too heavy to push it aside."), MSGBOX_DEFAULT)
		releaseall
		end
	}
	msgbox("{PLAYER} used the Power Glove!", MSGBOX_DEFAULT)
	dofieldeffect(FLDEFF_USE_STRENGTH)
	waitstate
	setflag(FLAG_SYS_USE_STRENGTH)
	releaseall
	end
}

script EventScript_UseWaterfall_PBL {
	lockall
	msgbox(format("{PLAYER} climbed the watefall!"), MSGBOX_DEFAULT)
	dofieldeffect(FLDEFF_USE_WATERFALL)
	waitstate
	setflag(FLAG_SYS_USE_STRENGTH)
	releaseall
	end
}

script EventScript_CannotUseWaterfall_PBL {
	lockall
	msgbox(format("A wall of water is crashing down with a mighty roar."), MSGBOX_DEFAULT)
	releaseall
	end
}

script EventScript_DiveSpot_PBL {
	lockall
	if (checkitem(ITEM_DIVING_SUIT) == FALSE) {
		msgbox(format("The sea is deep here."), MSGBOX_DEFAULT)
		releaseall
		end
	}
	msgbox(format("{PLAYER} put on the Diving Suit!"), MSGBOX_DEFAULT)
	dofieldeffect(FLDEFF_USE_DIVE)
	releaseall
	end
}

script EventScript_UseDive_PBL {
	lockall
	dofieldeffect(FLDEFF_USE_DIVE)
	releaseall
	end
}

script EventScript_UseDiveUnderwater_PBL {
	lockall
	if (checkitem(ITEM_DIVING_SUIT) == FALSE) {
		msgbox(format("Light is filtering down from above."), MSGBOX_DEFAULT)
		releaseall
		end
	}
	msgbox(format("{PLAYER} swam to the surface!"), MSGBOX_DEFAULT)
	dofieldeffect(FLDEFF_USE_DIVE)
	releaseall
	end
}

script EventScript_UseSurf_PBL {
	if (checkitem(ITEM_SURFBOARD) == FALSE) {
		end
	}
	lockall
	msgbox(format("{PLAYER} used the Surfboard!"), MSGBOX_DEFAULT)
	dofieldeffect(FLDEFF_USE_SURF)
	releaseall
	end
}

script EventScript_DisableAutoRun {
	msgbox(format("Auto Run {COLOR RED}Disabled{COLOR DARK_GRAY}."), MSGBOX_SIGN)
}
    
script EventScript_EnableAutoRun {
	msgbox(format("Auto Run {COLOR GREEN}Enabled{COLOR DARK_GRAY}."), MSGBOX_SIGN)
}

raw `

gText_Colress_UpgradedWarp:
	.string "Because of your progress,\n"
	.string "you have unlocked a special warp in\l"
	.string "Zone 0.$"

gText_Lelouch_ExpTrainingFinished:
	.string "{COLOR BLUE}Lelouch{COLOR DARK_GRAY}: The training session has\n"
	.string "finished.\p"
	.string "Your Pokémon has grown stronger.$"

gText_Lelouch_DidNotTrain:
	.string "{COLOR BLUE}Lelouch{COLOR DARK_GRAY}: If you do want to\n"
	.string "train your Pokémon, I'll be here.$"

gText_Lelouch_Exp:
	.string "{COLOR BLUE}Lelouch{COLOR DARK_GRAY}: With Experience Training,\n"
	.string "you can train one Pokémon to any\l"
	.string "level up to the level cap,\l"
	.string "at the cost of one Red Shard.\p"
	.string "Would you like to start an\n"
	.string "Experience Training session?$"

gText_Lelouch_PayRed:
	.string "{PLAYER} handed over 1 Red Shard.$"

gText_Lelouch_ChooseTraining:
	.string "{COLOR BLUE}Lelouch{COLOR DARK_GRAY}: Choose which training\n"
	.string "regiment you would like.$"

gText_Lelouch_CostsBlueShards:
	.string "{COLOR BLUE}Lelouch{COLOR DARK_GRAY}: Move Reminder services\n"
	.string "cost one Blue Shard.\p"
	.string "Would you like me to teach a\n"
	.string "forgotten move to your Pokémon?$"

gText_Lelouch_PayBlue:
	.string "{PLAYER} handed over 1 Blue Shard.$"

gText_Lelouch_CostsYellowShards:
	.string "{COLOR BLUE}Lelouch{COLOR DARK_GRAY}: Move Tutor services cost\n"
	.string "Yellow Shards. Which move would you\l"
	.string "like to tutor?$"

gText_Lelouch_PayYellow1:
	.string "{PLAYER} handed over 1 Yellow Shard.$"

gText_Lelouch_CostsGreenShards:
	.string "{COLOR BLUE}Lelouch{COLOR DARK_GRAY}: I can craft special items\n"
	.string "as well as upgrade your items\l"
	.string "in exchange for Green Shards.\l"
	.string "What would you like?$"

gText_Lelouch_PayGreen:
	.string "{PLAYER} handed over 1 Green Shard.$"

gText_HealingSign:
	.string "Joy's Healing Shop\n"
	.string "Health care costs money!$"

gText_ExitSign:
	.string "This is the exit!$"

gText_NotEnoughMons:
	.string "You need at least two Pokémon to\n"
	.string "initiate a Double Battle.$"

gText_PleasePick3Mons:
	.string "Please select three Pokémon to\n"
	.string "participate in the tag battle.$"

`
